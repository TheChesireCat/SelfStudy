FILENAME : tsir_scan.py 
 =========== 
##   Python wrapper for the temporal network SIR C code



from sys import argv

from read_run import run, read_network

import numpy as np

import matplotlib.pyplot as plt

import progressbar # install progressbar2



NU_MIN = 0.1

NU_MAX = 10.0

NNU = 21



BETA_MIN = 0.01

BETA_MAX = 1.0

NBETA = 21



##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##



if __name__ == '__main__':



	if len(argv) != 3:

		print('usage: python3 tsir_scan.py [temporal network] [output file]')

		exit(1)



	nwk = read_network(argv[1])



	# running the C code

	nus = np.geomspace(NU_MIN,NU_MAX,NNU)

	betas = np.geomspace(BETA_MIN,BETA_MAX,NBETA)

	omega = np.empty((NBETA-1,NNU-1))

	X = np.empty((NBETA,NNU))

	Y = np.empty((NBETA,NNU))



	ibar = 0

	with progressbar.ProgressBar(max_value=NBETA*NNU) as bar:

		for i in range(NBETA):

			for j in range(NNU):

				X[i,j] = betas[i]

				Y[i,j] = nus[j]

				if i < NBETA - 1 and j < NNU - 1:

					x = (betas[i] + betas[i + 1]) / 2

					y = (nus[j] + nus[j + 1]) / 2

					omega[i,j], err = run(nwk, x, y)

				ibar += 1

				bar.update(ibar)



	# plotting a heatmap

	fig,ax = plt.subplots()

	ax.set_xscale('log')

	ax.set_yscale('log')

	ax.set_xlabel('transmission probability')

	ax.set_ylabel('recovery rate')

	plt.pcolormesh(X, Y, omega, cmap='cubehelix')

	plt.colorbar(label = 'outbreak size')

	fig.savefig(argv[2])

	plt.close()



##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##
FILENAME : tsir.h 
 =========== 
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// code for temporal network SIR by Petter Holme (2018)



#include <stdio.h>

#include <stdlib.h>

#include <math.h>

#include <time.h>

#include <limits.h>

#include <fcntl.h>

#include <unistd.h>

#include <stdint.h>



#define NAVG 1000000 // number of runs for averages



#define NONE (UINT_MAX - 1)

#define END UINT_MAX // NONE and END are used in various ways, the only purpose of NONE < END is for the S(x) macro



#define S(x) (n[(x)].heap < END) // is x susceptible?



// auxiliary macro

#define SQ(x) ((x) * (x))



typedef struct GLOBALS {

	// INPUT PARAMETERS

	double a; // -1/nu where nu = recovery rate (input nu in units of duration, but internally in units of time steps)

	unsigned short rnd2inx[0x10000]; // mapping 16-bit random number to index

	// NETWORK SPECS

	unsigned int n, dur;

	// OTHER GLOBALS

	unsigned int nheap, *heap;

	// FOR RND

	uint64_t state;

	// OUTBREAK STATS

	unsigned int ns, *s;

} GLOBALS;



typedef struct NODE {

	unsigned int deg, *nb; // degree, neighbors

	unsigned int *nc, **t; // ordered number of / list of contact times for bisection serach

	unsigned int heap, time; // time is 1st the time of infection (for sorting the heap), then the time of recovery (to check if the node is I or R)

} NODE;



// heap.c

extern void up_heap (unsigned int);

extern void del_root ();



// misc.c

extern void read_data ();

extern unsigned int exptime ();



// pcg_rnd.c

extern uint16_t pcg_16 ();

extern uint32_t pcg_32 ();

extern uint32_t pcg_32_bounded (uint32_t);



// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
FILENAME : heap.c 
 =========== 
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// code for SIR on networks by Petter Holme (2018)



// routines for maintaining the binary heap (for the priority queue)

// the root of the heap is 1 (although it is allocated from 0) for simplicity



#include "tsir.h"



extern NODE *n;

extern GLOBALS g;



// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// performing down_heap (a.k.a. percolate down, a.k.a. min-heapify)

// it restores the heap property if there is an inconsistency between 'here'

// and its children (and no other inconsistencies)



void down_heap (unsigned int here) {

	unsigned int utmp, smallest = here;

	unsigned int left = here << 1; // = here * 2 (I know this is silly and saves no time)

	unsigned int right = left | 1; // = left + 1



	// if the heap property is violated vs the children, find the smallest child 

	if ((left <= g.nheap) && (n[g.heap[left]].time < n[g.heap[smallest]].time))

		smallest = left;

	if ((right <= g.nheap) && (n[g.heap[right]].time < n[g.heap[smallest]].time))

		smallest = right;



	if (smallest == here) return;



	// swap smallest and here

	utmp = g.heap[smallest];

	g.heap[smallest] = g.heap[here];

	g.heap[here] = utmp;



	n[g.heap[smallest]].heap = smallest;

	n[g.heap[here]].heap = here;



	// continue checking below

	down_heap(smallest);

}



// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// deleting the root of the heap



void del_root () {



	n[g.heap[1]].heap = END; // END represents non-susceptible

	if (g.nheap > 1) {

		g.heap[1] = g.heap[g.nheap--];

		n[g.heap[1]].heap = 1;

		down_heap(1);

	} else g.nheap = 0;

}



// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// performing up_heap (a.k.a. percolate down, a.k.a. min-heapify)

// for adding an element to the heap



void up_heap (unsigned int start) {

	unsigned int above, here = start, mem = g.heap[start];



	while (here > 1) {

		above = here >> 1; // = here / 2

		

		if (n[mem].time >= n[g.heap[above]].time) break;

		g.heap[here] = g.heap[above];

		n[g.heap[here]].heap = here;

		

		here = above;

	}

	

	n[g.heap[here] = mem].heap = here;

}



// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
FILENAME : LICENSE 
 =========== 
                                 Apache License

                           Version 2.0, January 2004

                        http://www.apache.org/licenses/



   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION



   1. Definitions.



      "License" shall mean the terms and conditions for use, reproduction,

      and distribution as defined by Sections 1 through 9 of this document.



      "Licensor" shall mean the copyright owner or entity authorized by

      the copyright owner that is granting the License.



      "Legal Entity" shall mean the union of the acting entity and all

      other entities that control, are controlled by, or are under common

      control with that entity. For the purposes of this definition,

      "control" means (i) the power, direct or indirect, to cause the

      direction or management of such entity, whether by contract or

      otherwise, or (ii) ownership of fifty percent (50%) or more of the

      outstanding shares, or (iii) beneficial ownership of such entity.



      "You" (or "Your") shall mean an individual or Legal Entity

      exercising permissions granted by this License.



      "Source" form shall mean the preferred form for making modifications,

      including but not limited to software source code, documentation

      source, and configuration files.



      "Object" form shall mean any form resulting from mechanical

      transformation or translation of a Source form, including but

      not limited to compiled object code, generated documentation,

      and conversions to other media types.



      "Work" shall mean the work of authorship, whether in Source or

      Object form, made available under the License, as indicated by a

      copyright notice that is included in or attached to the work

      (an example is provided in the Appendix below).



      "Derivative Works" shall mean any work, whether in Source or Object

      form, that is based on (or derived from) the Work and for which the

      editorial revisions, annotations, elaborations, or other modifications

      represent, as a whole, an original work of authorship. For the purposes

      of this License, Derivative Works shall not include works that remain

      separable from, or merely link (or bind by name) to the interfaces of,

      the Work and Derivative Works thereof.



      "Contribution" shall mean any work of authorship, including

      the original version of the Work and any modifications or additions

      to that Work or Derivative Works thereof, that is intentionally

      submitted to Licensor for inclusion in the Work by the copyright owner

      or by an individual or Legal Entity authorized to submit on behalf of

      the copyright owner. For the purposes of this definition, "submitted"

      means any form of electronic, verbal, or written communication sent

      to the Licensor or its representatives, including but not limited to

      communication on electronic mailing lists, source code control systems,

      and issue tracking systems that are managed by, or on behalf of, the

      Licensor for the purpose of discussing and improving the Work, but

      excluding communication that is conspicuously marked or otherwise

      designated in writing by the copyright owner as "Not a Contribution."



      "Contributor" shall mean Licensor and any individual or Legal Entity

      on behalf of whom a Contribution has been received by Licensor and

      subsequently incorporated within the Work.



   2. Grant of Copyright License. Subject to the terms and conditions of

      this License, each Contributor hereby grants to You a perpetual,

      worldwide, non-exclusive, no-charge, royalty-free, irrevocable

      copyright license to reproduce, prepare Derivative Works of,

      publicly display, publicly perform, sublicense, and distribute the

      Work and such Derivative Works in Source or Object form.



   3. Grant of Patent License. Subject to the terms and conditions of

      this License, each Contributor hereby grants to You a perpetual,

      worldwide, non-exclusive, no-charge, royalty-free, irrevocable

      (except as stated in this section) patent license to make, have made,

      use, offer to sell, sell, import, and otherwise transfer the Work,

      where such license applies only to those patent claims licensable

      by such Contributor that are necessarily infringed by their

      Contribution(s) alone or by combination of their Contribution(s)

      with the Work to which such Contribution(s) was submitted. If You

      institute patent litigation against any entity (including a

      cross-claim or counterclaim in a lawsuit) alleging that the Work

      or a Contribution incorporated within the Work constitutes direct

      or contributory patent infringement, then any patent licenses

      granted to You under this License for that Work shall terminate

      as of the date such litigation is filed.



   4. Redistribution. You may reproduce and distribute copies of the

      Work or Derivative Works thereof in any medium, with or without

      modifications, and in Source or Object form, provided that You

      meet the following conditions:



      (a) You must give any other recipients of the Work or

          Derivative Works a copy of this License; and



      (b) You must cause any modified files to carry prominent notices

          stating that You changed the files; and



      (c) You must retain, in the Source form of any Derivative Works

          that You distribute, all copyright, patent, trademark, and

          attribution notices from the Source form of the Work,

          excluding those notices that do not pertain to any part of

          the Derivative Works; and



      (d) If the Work includes a "NOTICE" text file as part of its

          distribution, then any Derivative Works that You distribute must

          include a readable copy of the attribution notices contained

          within such NOTICE file, excluding those notices that do not

          pertain to any part of the Derivative Works, in at least one

          of the following places: within a NOTICE text file distributed

          as part of the Derivative Works; within the Source form or

          documentation, if provided along with the Derivative Works; or,

          within a display generated by the Derivative Works, if and

          wherever such third-party notices normally appear. The contents

          of the NOTICE file are for informational purposes only and

          do not modify the License. You may add Your own attribution

          notices within Derivative Works that You distribute, alongside

          or as an addendum to the NOTICE text from the Work, provided

          that such additional attribution notices cannot be construed

          as modifying the License.



      You may add Your own copyright statement to Your modifications and

      may provide additional or different license terms and conditions

      for use, reproduction, or distribution of Your modifications, or

      for any such Derivative Works as a whole, provided Your use,

      reproduction, and distribution of the Work otherwise complies with

      the conditions stated in this License.



   5. Submission of Contributions. Unless You explicitly state otherwise,

      any Contribution intentionally submitted for inclusion in the Work

      by You to the Licensor shall be under the terms and conditions of

      this License, without any additional terms or conditions.

      Notwithstanding the above, nothing herein shall supersede or modify

      the terms of any separate license agreement you may have executed

      with Licensor regarding such Contributions.



   6. Trademarks. This License does not grant permission to use the trade

      names, trademarks, service marks, or product names of the Licensor,

      except as required for reasonable and customary use in describing the

      origin of the Work and reproducing the content of the NOTICE file.



   7. Disclaimer of Warranty. Unless required by applicable law or

      agreed to in writing, Licensor provides the Work (and each

      Contributor provides its Contributions) on an "AS IS" BASIS,

      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or

      implied, including, without limitation, any warranties or conditions

      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A

      PARTICULAR PURPOSE. You are solely responsible for determining the

      appropriateness of using or redistributing the Work and assume any

      risks associated with Your exercise of permissions under this License.



   8. Limitation of Liability. In no event and under no legal theory,

      whether in tort (including negligence), contract, or otherwise,

      unless required by applicable law (such as deliberate and grossly

      negligent acts) or agreed to in writing, shall any Contributor be

      liable to You for damages, including any direct, indirect, special,

      incidental, or consequential damages of any character arising as a

      result of this License or out of the use or inability to use the

      Work (including but not limited to damages for loss of goodwill,

      work stoppage, computer failure or malfunction, or any and all

      other commercial damages or losses), even if such Contributor

      has been advised of the possibility of such damages.



   9. Accepting Warranty or Additional Liability. While redistributing

      the Work or Derivative Works thereof, You may choose to offer,

      and charge a fee for, acceptance of support, warranty, indemnity,

      or other liability obligations and/or rights consistent with this

      License. However, in accepting such obligations, You may act only

      on Your own behalf and on Your sole responsibility, not on behalf

      of any other Contributor, and only if You agree to indemnify,

      defend, and hold each Contributor harmless for any liability

      incurred by, or claims asserted against, such Contributor by reason

      of your accepting any such warranty or additional liability.



   END OF TERMS AND CONDITIONS



   APPENDIX: How to apply the Apache License to your work.



      To apply the Apache License to your work, attach the following

      boilerplate notice, with the fields enclosed by brackets "[]"

      replaced with your own identifying information. (Don't include

      the brackets!)  The text should be enclosed in the appropriate

      comment syntax for the file format. We also recommend that a

      file or class name and description of purpose be included on the

      same "printed page" as the copyright notice for easier

      identification within third-party archives.



   Copyright [yyyy] [name of copyright owner]



   Licensed under the Apache License, Version 2.0 (the "License");

   you may not use this file except in compliance with the License.

   You may obtain a copy of the License at



       http://www.apache.org/licenses/LICENSE-2.0



   Unless required by applicable law or agreed to in writing, software

   distributed under the License is distributed on an "AS IS" BASIS,

   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

   See the License for the specific language governing permissions and

   limitations under the License.
FILENAME : Makefile 
 =========== 
SRC = .

CFLAGS = -Ofast -march=native

LDFLAGS = 

CC = gcc



OBJ1 = o/tsir.o o/misc.o o/heap.o o/pcg_rnd.o



all : tsir



tsir: $(OBJ1)

	$(CC) $(LDFLAGS) -o $@ $^ -lm



o/tsir.o : $(SRC)/tsir.c $(SRC)/tsir.h $(SRC)/Makefile

	$(CC) $(CFLAGS) -c $(SRC)/tsir.c -o $@



o/misc.o : $(SRC)/misc.c $(SRC)/tsir.h $(SRC)/Makefile

	$(CC) $(CFLAGS) -c $(SRC)/misc.c -o $@



o/heap.o : $(SRC)/heap.c $(SRC)/tsir.h $(SRC)/Makefile

	$(CC) $(CFLAGS) -c $(SRC)/heap.c -o $@



o/pcg_rnd.o : $(SRC)/pcg_rnd.c $(SRC)/tsir.h $(SRC)/Makefile

	$(CC) $(CFLAGS) -c $(SRC)/pcg_rnd.c -o $@
FILENAME : tsir_single.py 
 =========== 
# Python wrapper for the temporal network SIR C code



from sys import argv

from read_run import run, read_network



##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##



if __name__ == '__main__':



	if len(argv) != 4:

		print('usage: python3 tsir_single.py [temporal network] [beta] [nu]')

		exit(1)

	

	omega, err = run(read_network(argv[1]), float(argv[2]), float(argv[3]))



	print('avg. outbreak size:', omega, '(' + str(err) + ')')

	

##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##
FILENAME : README.md 
 =========== 
# Crazy fast code for the SIR model on temporal networks

This code is described in this preprint https://arxiv.org/abs/2007.14386 So if you need to cite it:

>@unpublished{holme_tsir,

>  author={Petter Holme},

>  title={Fast and principled simulations of the {SIR} model on temporal networks},

>  note={e-print arXiv:2007.14386},

>  year=2020}

>  }





To get it running you need:



1. Make a directory o (for complier object files)

2. Compile it by gcc by typing `make`.

3. Run it via a Python wrapper.



I supply two Python wrappers: One for simply calculating the average outbreak size given a network and the two parameters (per-contact transmission probability and recovery rate). You can run it like:



```python3 tsir_single.py gallery01.tsv 0.5 2```



The first argument is the file containing the network. The input format is a blank-space separated contact list (vertex-id 1, vertex-id 2, time). It will neglect multiple contacts and self-contacts. The example network comes from: http://www.sociopatterns.org/datasets/ The second argument is the transmission probability, the third is the recovery rate.



Another python wrapper is for scanning the parameter space (at least a part of it) and plotting a heat map of the outbreak size. You can run that one like:



```python3 tsir_scan.py gallery01.tsv gallery01.pdf```



The last argument is the name of the output figure file. The suffix determines the image format.



## Notes for the July 2020 update



I have tried to simplify the code without making it slower by moving preprocessing to the Python wrapper. (Running the code from Python was anyway more or less needed to conveniently seed the C code with a random 64-bit uint.) It uses 10^6 averages, which is probably more than enough for larger data sets.



I have refrained from expanding this into a full Python library mostly because the research projects I can imagine building on this code would anyway need to add something to the C program. For example, adding measurements about individual nodes or links should be straightforward.
FILENAME : tsir.c 
 =========== 
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// code for SIR on temporal networks by Petter Holme (2018/2020)



#include "tsir.h"



GLOBALS g;

NODE *n;



// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// this routine first localizes the first contact later than 'now' in t

// then picks the contact that can infect (a chain of bernouilli trials)

// among the rest of the contacts. It returns the time of the infecting contact



unsigned int contagious_contact (unsigned int *t, unsigned int nt, unsigned int now) {

	unsigned int lo = 0, mid, hi = nt - 1;



	if (t[hi] <= now) return END; // no need to search further bcoz t is sorted. Note that the bisection search depends on this line.



	// the actual bisection search

	while (lo < hi) {

		mid = (lo + hi) >> 1;

		if (t[mid] > now) hi = mid;

		else lo = mid + 1;

	}



	// get a random contact

	hi += g.rnd2inx[pcg_16()];



	if (hi >= nt) return NONE; // if the contact is too late, skip it



	// return the time of the contact

	return t[hi];

}



// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// this routine does the book keeping for an infection event



void infect () {

	unsigned int i, you, t, me = g.heap[1];

	unsigned int now = n[me].time, duration = exptime();



	del_root(); // take the newly infected off the heap



	if (duration > 0) { // if the duration is zero, no one else can be infected

		n[me].time += duration;



		// go through the neighbors of the infected node . .

		for (i = 0; i < n[me].deg; i++) {

			you = n[me].nb[i];

			if (S(you)) { // if you is S, you can be infected

				// find the infection time of you

				t = contagious_contact(n[me].t[i], n[me].nc[i], now);

				if (t == END) break; // bcoz the sorting of nbs, we can break



				// if the infection time is before when me gets infected,

				// and (if it was already listed for infection) before the

				// previously listed infection event, then list it

				if ((t <= n[me].time) && (t < n[you].time)) {

					n[you].time = t; // set you's infection time

					if (n[you].heap == NONE) { // if not listed before, then extend the heap

						g.heap[++g.nheap] = you;

						n[you].heap = g.nheap;

					}

					up_heap(n[you].heap); // this works bcoz the only heap relationship that can be violated is the one between you and its parent

				}

			}

		}

	}



	g.s[g.ns++] = me; // to get the outbreak size

}



// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// this routine runs one SIR outbreak from a random starting node



void sir () {

	unsigned int i, source;

	

	g.ns = 0;

	

	// get & infect the source



	source = pcg_32_bounded(g.n);

	n[source].time = pcg_32_bounded(g.dur);

	n[source].heap = 1;

	g.heap[g.nheap = 1] = source;



	// run the outbreak

	while (g.nheap) infect();



	// clean

	for (i = 0; i < g.ns; i++) n[g.s[i]].heap = n[g.s[i]].time = NONE;

}



// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// main function handling i/o



int main (int argc, char *argv[]) {

	unsigned int i, j;

	double d, x, s1 = 0.0, s2 = 0.0; // for averages

	

	g.state = strtoull(argv[3], NULL, 10); // argv[3] is the RNG state



	// read network

	read_data();



	// initialize parameters

	d = atof(argv[1]);

	if (d < 1.0) {

		d = 1.0 / log(1.0 - d); // argv[1] is beta

		for (i = 0; i < 0x10000; i++) {

			x = d * log((i + 1) / 65536.0);

			g.rnd2inx[i] = (x > USHRT_MAX) ? USHRT_MAX : x;

		}

	} else for (i = 0; i < 0x10000; i++) g.rnd2inx[i] = 0;



	g.a = -(g.dur / atof(argv[2])); // argv[2] is nu in units of the duration of the data



	// allocating the heap (N + 1) because it's indices are 1,...,N

	g.heap = malloc((g.n + 1) * sizeof(unsigned int));

	g.s = calloc(g.n, sizeof(unsigned int));



	// initialize

	for (i = 0; i < g.n; i++) n[i].heap = n[i].time = NONE;

	

	// run the simulations and summing for averages

	for (i = 0; i < NAVG; i++) {

		sir();



		// saving stats for averages

		d = g.ns;

		s1 += d;

		s2 += SQ(d);

	}



	// average

	s1 /= NAVG;

	s2 /= NAVG;



	// print result

	printf("%g %g\n", s1, sqrt((s2 - SQ(s1)) / (NAVG - 1)));

	

	// cleaning up

	for (i = 0; i < g.n; i++) {

		for (j = 0; j < n[i].deg; j++) free(n[i].t[j]);

		free(n[i].nb);

		free(n[i].nc);

		free(n[i].t);

	}

	free(n); free(g.heap); free(g.s);

	 

	return 0;

}



// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
FILENAME : read_run.py 
 =========== 
##   Common routines for Python wrapper for temporal network SIR C code



import networkx as nx

from random import getrandbits

from subprocess import Popen, PIPE, STDOUT



##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##

# This function reads the network. The input file contains

# three columns [id 1] [id 2] [time], showing that id 1 has

# been in contact with id 2 at time t

# nodes with no contacts are not considered



def read_network (fname):



	G = nx.Graph()



	tmax = 0



	try:

		with open(fname) as f:

			for l in f:

				a = l.strip().split()

				if len(a) == 3:

					if a[0] != a[1]:

						b = int(a[2])

						if tmax < b:

							tmax = b

						if G.has_edge(a[0],a[1]):

							if b not in G.edges[a[0],a[1]]['times']: # excluding identical events

								G.edges[a[0],a[1]]['times'].append(b)

							else:

								print('ignoring multiple events', a[0], a[1], a[2])

						else:

							G.add_edge(a[0],a[1])

							G.edges[a[0],a[1]]['times'] = [b]

					else:

						print('ignoring self-contact of', a[0])

	except:

		print('reading error in:', fname)

		exit(1)



	H = nx.convert_node_labels_to_integers(G) # this can change the id numbers from the original file



	# assembling the temporal network in the format of the C code

	nwk = str(H.number_of_nodes()) + ' ' + str(tmax) + '\n'

	for i in range(H.number_of_nodes()):

		nwk += str(H.degree(i)) + '\n'

		to_sort = []

		for v in H.neighbors(i):

			to_sort.append((max(H.edges[i,v]['times']),v))

		for x,v in sorted(to_sort,reverse=True):

			nwk += str(v) + ' ' + str(len(H.edges[i,v]['times'])) + '\n'

			for t in sorted(H.edges[i,v]['times']):

				nwk += str(t) + '\n'



	return nwk



##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##



def run (nwk, beta, nu):



	assert(beta > 0.0)

	if (beta > 1):

		print('beta should be <= 1, so set to 1')

		beta = 1.0

	assert(nu > 0)



	p = Popen(['./tsir', str(beta), str(nu), str(getrandbits(64))], stdout=PIPE, stdin=PIPE, stderr=STDOUT)

	o = p.communicate(input=bytes(nwk,encoding='utf-8'))[0]



	# interpret and report the output

	a = o.decode().split('\n')

	b = a[0].split()



	return float(b[0]), float(b[1])



##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##   ##
FILENAME : pcg_rnd.c 
 =========== 
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// code for temporal network SIR by Petter Holme (2018)



// this file contains the random number generator, derived from the PCG

// RNG v0.94 http://www.pcg-random.org under the Apache License 2.0

// http://www.apache.org/licenses/LICENSE-2.0



// 32-bit Output, 64-bit State, the PCG-XSH-RR version



#include "tsir.h"



extern GLOBALS g;



// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -



uint32_t pcg_32 () {

	uint64_t state = g.state;

	uint32_t value, rot;



	g.state = g.state * 6364136223846793005ull + 1442695040888963407ull;

	value = ((state >> 18u) ^ state) >> 27u;

	rot = state >> 59u;

	return (value >> rot) | (value << ((- rot) & 31u));

}



// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -



uint32_t pcg_32_bounded (uint32_t bound) {

	uint32_t threshold = -bound % bound, r;



	do r = pcg_32();

	while (r < threshold);

	

	return r % bound;

}



// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -



uint16_t pcg_16 () {

	static uint32_t exist, rmem;



	if (exist) {

		exist = 0;

		return rmem >> 16;

	}

	exist = 1;

	rmem = pcg_32();

	return rmem;

}



// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
FILENAME : gallery01.tsv 
 =========== 
0 1 0

0 2 0

1 2 0

0 1 1

1 2 1

0 1 2

1 2 2

0 1 3

1 2 3

1 2 4

0 2 4

0 1 4

1 2 8

1 2 9

0 1 9

1 2 10

0 2 10

0 1 10

0 1 12

1 2 12

1 2 14

1 2 15

3 4 15

1 2 16

0 1 16

0 2 16

3 4 16

3 4 17

0 1 18

3 4 18

0 1 19

1 2 20

3 4 20

1 2 21

0 1 21

3 4 21

1 2 22

0 2 22

0 1 23

5 6 23

0 1 24

1 2 24

5 6 24

0 2 24

3 4 24

5 7 25

6 7 25

5 8 25

5 6 25

3 4 25

6 8 25

5 8 26

5 6 26

6 8 26

6 7 27

5 6 27

0 2 27

6 8 27

3 4 27

6 7 28

5 6 28

0 2 28

3 4 28

5 6 29

3 4 29

7 8 30

6 7 30

9 10 30

5 6 30

3 4 30

7 10 31

7 9 31

6 7 31

9 10 31

5 6 31

3 4 31

8 10 31

9 10 32

4 11 32

3 11 32

3 4 32

5 7 33

9 10 33

5 6 33

3 11 33

3 4 33

7 8 34

5 7 34

6 7 34

9 10 34

3 5 34

3 11 34

3 4 34

4 8 34

5 7 35

9 10 35

4 5 35

3 5 35

0 2 35

3 4 35

7 8 36

6 7 36

9 10 36

4 5 36

5 6 36

3 4 36

3 6 36

12 13 37

5 7 37

6 7 37

9 10 37

5 6 37

0 2 37

3 6 37

3 4 37

12 13 38

9 10 38

5 6 38

0 2 38

3 4 38

9 10 39

5 6 39

0 2 39

3 4 39

3 13 39

4 13 39

3 12 40

9 10 40

3 4 40

3 13 40

4 13 40

4 12 41

12 13 41

3 12 41

9 10 41

0 2 41

3 4 41

3 13 41

4 13 41

9 10 42

11 13 42

3 13 42

4 12 43

12 13 43

9 10 43

5 6 43

3 4 43

4 13 43

4 12 44

7 11 44

9 10 44

5 6 44

3 4 44

3 13 44

4 10 44

0 1 45

9 10 45

3 9 45

5 6 45

3 10 45

4 10 45

10 13 45

4 13 45

0 1 46

1 2 46

9 10 46

4 9 46

3 9 46

5 6 46

0 2 46

3 10 46

3 4 46

4 10 46

14 15 47

0 1 47

9 10 47

5 6 47

0 2 47

3 4 47

14 15 48

0 1 48

1 2 48

9 10 48

5 6 48

3 4 48

14 15 49

9 10 49

5 6 49

3 4 49

14 15 50

7 8 50

9 10 50

5 6 50

0 2 50

3 4 50

1 13 51

12 13 51

5 6 51

0 2 51

3 4 51

1 13 52

6 7 52

5 6 52

0 2 52

3 4 52

12 13 53

6 7 53

9 10 53

5 6 53

0 2 53

3 4 53

9 10 54

9 13 54

5 6 54

10 13 54

10 13 55

9 13 55

9 10 55

5 6 55

3 4 55

11 14 56

3 4 56

5 6 57

0 2 57

5 6 58

3 4 58

12 13 59

1 2 59

5 6 59

3 4 59

3 4 60

2 3 60

12 13 61

1 3 61

9 10 61

5 6 61

2 3 61

12 13 62

1 4 62

1 3 62

1 2 62

6 7 62

9 10 62

5 6 62

2 3 62

3 4 62

3 16 62

4 16 63

1 16 63

3 16 63

5 6 63

1 2 63

2 3 63

3 4 63

1 4 63

13 16 64

1 2 64

9 10 64

3 4 64

3 16 64

4 16 64

12 13 65

4 16 65

3 4 65

1 2 65

3 16 65

6 7 65

9 10 65

1 2 66

6 7 66

4 16 66

9 10 66

3 4 66

0 1 67

6 7 67

4 16 67

4 16 68

3 16 68

2 12 68

6 7 68

0 1 68

3 4 68

0 1 69

12 13 69

3 4 69

4 16 69

9 10 69

0 1 70

3 4 70

4 16 70

12 13 70

9 10 70

0 1 71

0 13 71

3 4 71

3 16 71

17 18 71

4 16 71

5 6 72

3 4 72

3 16 72

17 18 72

4 16 72

9 10 72

3 4 73

3 16 73

17 19 73

13 14 73

18 19 73

5 6 73

4 16 73

9 10 73

1 10 74

1 2 74

12 14 74

12 13 74

3 4 74

3 16 74

13 14 74

18 19 74

5 6 74

6 7 74

5 7 74

9 10 74

0 15 75

1 9 75

12 13 75

3 4 75

3 16 75

17 19 75

5 6 75

6 7 75

4 16 75

5 7 75

9 10 75

1 15 76

1 10 76

0 1 76

1 2 76

12 13 76

0 10 76

0 9 76

0 2 76

3 4 76

3 16 76

2 9 76

5 6 76

4 16 76

20 21 77

20 22 77

5 6 77

1 10 77

0 1 77

1 2 77

21 22 77

3 4 77

17 18 77

17 19 77

4 16 77

21 23 78

22 23 78

20 23 78

20 21 78

20 22 78

21 22 78

3 4 78

17 18 78

17 19 78

5 6 78

6 7 78

5 7 78

9 10 78

21 23 79

20 23 79

20 22 79

21 22 79

3 4 79

3 16 79

17 18 79

17 19 79

5 6 79

6 7 79

5 7 79

20 21 80

20 22 80

6 7 80

1 2 80

21 22 80

3 4 80

17 18 80

21 23 81

20 22 81

6 7 81

1 2 81

21 22 81

3 4 81

3 16 81

17 18 81

17 19 81

18 19 81

4 16 81

5 7 81

9 10 81

22 23 82

20 22 82

5 6 82

0 1 82

1 2 82

17 19 82

18 19 82

4 16 82

5 7 82

9 10 82

21 23 83

22 23 83

20 23 83

20 22 83

6 8 83

5 6 83

0 1 83

1 2 83

21 22 83

3 4 83

15 16 83

7 8 83

9 10 83

9 13 83

5 8 83

10 13 83

21 23 84

22 23 84

20 23 84

20 21 84

20 22 84

0 1 84

1 2 84

21 22 84

3 4 84

13 16 84

7 8 84

5 8 84

10 13 84

21 23 85

20 23 85

20 21 85

1 2 85

0 1 85

3 4 85

5 6 85

4 16 85

13 16 85

5 7 85

9 13 85

22 23 86

20 22 86

6 14 86

5 6 86

12 13 86

3 4 86

3 13 86

3 16 86

5 14 86

4 16 86

21 23 87

0 1 87

3 4 87

3 16 87

7 14 87

6 7 87

5 8 87

4 16 87

13 16 87

5 7 87

21 23 88

22 23 88

20 23 88

20 22 88

0 1 88

3 4 88

3 16 88

17 18 88

4 16 88

7 10 88

5 10 88

20 21 89

20 22 89

21 22 89

3 4 89

5 6 89

6 7 89

7 8 89

4 16 89

7 10 89

5 10 89

21 23 90

20 22 90

6 7 90

1 2 90

21 22 90

3 7 90

4 13 90

4 16 90

13 16 90

5 7 90

9 10 90

21 23 91

3 6 91

12 16 91

3 21 91

3 4 91

3 16 91

2 9 91

9 10 91

22 23 92

20 22 92

3 20 92

3 6 92

0 1 92

21 22 92

3 8 92

3 7 92

2 10 92

2 9 92

4 16 92

16 21 92

7 8 92

9 10 92

16 20 93

0 1 93

1 2 93

2 9 93

2 16 93

6 8 93

4 16 93

9 10 93

21 23 94

22 23 94

1 2 94

12 13 94

24 25 94

21 22 94

3 21 94

4 16 94

9 10 94

20 21 95

20 22 95

3 20 95

21 22 95

3 21 95

2 10 95

6 9 95

5 6 95

4 16 95

21 23 96

9 15 96

3 15 96

0 1 96

3 9 96

3 4 96

3 16 96

4 16 96

4 9 96

10 13 96

20 21 97

20 22 97

12 13 97

21 22 97

3 10 97

3 4 97

9 13 97

10 13 97

20 22 98

6 21 98

5 6 98

24 25 98

0 15 98

21 22 98

3 10 98

3 16 98

4 16 98

13 16 98

4 9 98

4 13 98

21 23 99

6 21 99

5 6 99

12 13 99

24 25 99

3 4 99

3 16 99

4 16 99

9 10 99

9 11 99

10 11 99

21 23 100

20 21 100

20 22 100

12 13 100

3 4 100

3 16 100

6 21 100

5 6 100

4 16 100

9 10 100

21 23 101

1 2 101

12 13 101

0 22 101

3 16 101

17 18 101

5 6 101

4 16 101

9 10 101

21 23 102

20 23 102

0 23 102

20 21 102

20 22 102

0 20 102

5 6 102

1 2 102

24 25 102

21 22 102

17 18 102

9 10 102

12 13 103

24 25 103

0 2 103

21 22 103

3 4 103

3 16 103

4 16 103

9 10 103

0 2 104

21 22 104

3 16 104

13 25 104

9 10 104

21 23 105

20 21 105

12 13 105

21 22 105

5 6 105

4 16 105

21 23 106

20 21 106

1 6 106

12 13 106

21 22 106

3 13 106

3 16 106

17 18 106

17 19 106

9 10 106

20 23 107

20 22 107

20 21 107

0 2 107

4 16 107

9 10 107

21 23 108

5 6 108

1 5 108

24 25 108

0 2 108

3 4 108

4 16 108

9 10 108

20 22 109

5 6 109

1 5 109

12 13 109

11 24 109

3 16 109

17 18 109

17 19 109

4 16 109

9 10 109

5 6 110

1 2 110

12 13 110

3 16 110

17 18 110

17 19 110

2 8 110

4 16 110

9 10 110

21 23 111

5 6 111

1 2 111

12 13 111

0 2 111

21 22 111

3 16 111

15 19 111

9 10 111

21 23 112

5 6 112

1 2 112

0 1 112

12 13 112

0 2 112

21 22 112

3 4 112

4 16 112

9 10 112

21 23 113

0 1 113

1 2 113

12 13 113

0 2 113

22 25 113

17 19 113

5 6 113

4 16 113

9 10 113

21 23 114

15 16 114

0 1 114

12 13 114

24 25 114

0 2 114

5 6 114

9 10 114

20 21 115

20 22 115

5 6 115

0 1 115

1 2 115

17 18 115

17 19 115

15 16 115

9 10 115

20 23 116

20 22 116

15 16 116

0 1 116

1 2 116

12 13 116

24 25 116

0 2 116

3 4 116

3 16 116

5 6 116

4 16 116

20 21 117

5 6 117

0 1 117

1 2 117

0 2 117

21 22 117

3 16 117

12 13 117

20 23 118

20 21 118

20 22 118

5 6 118

1 6 118

2 6 118

1 2 118

0 1 118

1 3 118

12 13 118

24 25 118

0 2 118

21 22 118

3 16 118

2 5 118

4 26 118

9 10 118

21 23 119

22 23 119

0 1 119

12 13 119

24 25 119

3 16 119

9 10 119

22 23 120

0 1 120

12 13 120

24 25 120

21 22 120

3 16 120

15 26 120

22 23 121

0 1 121

12 13 121

24 25 121

3 4 121

3 16 121

17 18 121

19 26 121

0 1 122

12 13 122

24 25 122

21 22 122

3 16 122

17 18 122

18 19 122

5 6 122

21 23 123

0 1 123

12 13 123

24 25 123

19 22 123

3 16 123

17 18 123

17 19 123

19 21 123

9 10 123

21 23 124

20 21 124

20 22 124

0 1 124

24 25 124

21 22 124

3 16 124

18 19 124

9 10 124

21 23 125

20 21 125

20 22 125

24 25 125

21 22 125

3 4 125

3 16 125

17 18 125

17 19 125

5 6 125

21 23 126

20 21 126

20 22 126

5 6 126

21 22 126

3 16 126

17 19 126

22 23 127

20 23 127

20 22 127

24 25 127

21 22 127

3 16 127

18 19 127

4 16 127

21 23 128

20 23 128

20 22 128

21 22 128

3 4 128

3 16 128

27 28 128

20 21 129

20 22 129

5 6 129

21 22 129

22 27 129

3 16 129

17 18 129

17 19 129

21 28 129

27 28 129

27 28 130

21 23 130

22 23 130

23 27 130

5 6 130

12 13 130

21 22 130

29 30 130

3 4 130

3 16 130

17 18 130

21 27 130

4 16 130

30 31 131

29 31 131

21 23 131

12 13 131

20 22 131

21 22 131

29 30 131

3 4 131

3 16 131

6 8 131

27 28 131

4 16 131

21 28 131

30 31 132

21 23 132

22 23 132

12 13 132

20 22 132

27 28 132

21 22 132

29 30 132

3 4 132

3 16 132

3 28 132

6 8 132

5 6 132

16 21 132

5 8 132

30 31 133

29 31 133

22 23 133

16 23 133

20 21 133

6 8 133

5 6 133

12 13 133

16 22 133

29 30 133

27 28 133

5 8 133

24 31 134

25 31 134

5 6 134

24 30 134

24 25 134

29 30 134

27 28 134

5 8 134

21 23 135

4 23 135

16 23 135

20 23 135

20 21 135

4 20 135

16 20 135

24 30 135

29 30 135

17 18 135

4 21 135

4 16 135

27 28 135

16 21 135

21 23 136

16 23 136

12 13 136

29 30 136

27 28 136

17 18 136

16 21 136

5 6 137

29 30 137

17 18 137

8 26 137

27 28 137

27 28 138

12 13 138

29 30 138

17 18 138

5 6 138

8 26 138

27 28 139

6 8 139

5 6 139

29 30 139

17 18 139

8 26 139

27 28 140

12 13 140

29 30 140

6 8 140

6 26 140

5 6 140

8 26 140

5 26 140

9 10 140

5 8 140

27 28 141

6 8 141

5 6 141

29 30 141

12 13 141

9 10 141

5 8 141

6 8 142

6 26 142

5 6 142

29 30 142

17 18 142

8 26 142

5 26 142

5 8 142

29 30 143

6 8 143

6 26 143

5 6 143

8 26 143

5 26 143

27 28 143

27 28 144

0 1 144

29 30 144

6 8 144

9 10 144

0 1 145

29 30 145

5 6 145

9 27 145

27 28 145

9 10 145

27 28 146

0 1 146

29 30 146

9 10 146

5 6 147

0 1 147

27 28 147

9 10 147

10 28 147

27 31 148

12 13 148

1 2 148

0 1 148

5 6 148

27 28 148

27 28 149

0 1 149

29 30 149

9 10 149

26 31 150

5 6 150

29 30 150

2 26 150

27 28 150

9 10 150

12 13 151

29 30 151

27 28 151

9 10 151

27 28 152

9 15 152

1 15 152

2 15 152

1 2 152

12 13 152

0 2 152

29 30 152

5 6 152

27 28 153

5 6 153

0 9 153

0 2 153

17 18 153

2 10 153

2 15 153

10 15 153

9 15 153

9 10 153

12 13 154

27 28 154

5 6 154

17 18 154

2 15 154

12 13 155

17 18 155

32 33 155

5 6 155

27 28 155

12 13 156

27 28 156

32 33 156

5 6 156

17 18 157

17 19 157

27 28 157

32 33 157

5 6 157

29 30 158

32 33 158

34 35 158

17 18 158

27 28 158

12 13 159

27 28 159

32 33 159

18 30 159

18 19 159

5 6 159

19 30 159

29 30 159

29 30 160

27 28 160

12 13 160

32 33 160

5 6 160

17 18 160

18 19 160

17 19 160

12 13 161

27 28 161

32 33 161

29 30 161

5 6 161

27 30 162

27 29 162

27 28 162

12 13 162

32 33 162

5 6 162

29 30 162

28 30 162

12 13 163

27 28 163

32 33 163

12 13 164

32 33 164

31 33 164

28 31 164

27 28 165

32 33 165

27 28 166

31 33 166

27 33 167

27 28 167

12 13 167

28 33 167

12 13 168

8 33 168

27 33 168

27 28 168

27 28 169

32 33 169

32 33 170

27 28 170

32 33 171

32 36 171

27 28 171

27 28 172

32 33 172

6 35 172

12 13 173

27 28 173

32 33 173

29 30 173

12 13 174

32 33 174

5 6 174

27 28 174

5 27 175

27 28 175

32 33 175

33 36 175

27 28 176

32 33 176

5 28 176

30 36 177

27 28 177

32 33 177

31 32 177

31 33 177

27 28 178

32 33 178

30 36 178

29 36 178

29 30 179

27 28 179

32 33 179

5 6 179

27 28 180

32 33 180

5 6 180

29 30 180

29 30 181

12 13 181

32 33 181

6 27 181

27 28 181

37 38 182

12 13 182

27 28 182

32 33 182

29 30 182

27 28 183

12 13 183

37 38 183

37 38 184

12 13 184

32 33 184

29 30 184

27 28 184

37 38 185

12 13 185

32 33 185

30 39 185

29 30 185

27 28 185

33 38 186

38 39 186

37 38 186

33 37 186

26 37 186

27 28 186

26 33 186

33 39 186

29 30 186

12 13 187

37 38 187

38 39 187

32 33 187

29 30 187

27 28 187

27 28 188

32 33 188

29 30 188

12 13 188

37 38 189

27 28 189

12 13 189

29 30 189

27 28 190

12 13 190

40 41 190

29 30 190

40 41 191

12 13 191

29 30 191

27 28 191

40 41 192

12 13 192

27 28 192

29 30 192

29 30 193

27 28 193

12 13 193

37 38 194

12 13 194

29 30 194

27 28 194

29 30 195

27 28 195

12 13 195

5 6 195

12 13 196

29 30 196

27 28 196

12 13 197

30 41 197

27 28 197

34 35 197

29 30 197

29 30 198

40 41 198

27 28 198

12 13 199

29 30 199

5 6 199

40 41 199

27 28 199

12 13 200

27 28 200

29 30 200

5 6 200

34 35 201

29 30 201

27 28 201

27 28 202

12 13 202

5 6 202

29 30 203

12 13 203

29 41 203

27 28 203

39 41 204

40 41 204

12 13 204

37 38 205

40 41 205

5 6 205

27 28 205

37 38 206

12 13 206

27 28 206

27 28 207

12 13 207

37 38 207

5 6 207

37 38 208

27 28 208

37 38 209

40 41 209

35 41 209

27 28 209

40 41 210

27 28 210

37 38 210

37 38 211

27 28 211

34 35 211

12 13 212

27 28 212

37 38 212

30 41 213

12 13 213

37 38 213

30 34 213

37 38 214

30 34 214

12 13 214

37 38 215

12 13 215

27 28 215

37 38 216

27 28 216

37 38 217

27 28 217

37 38 218

30 34 218

27 28 218

12 13 219

27 28 219

37 38 219

5 6 219

37 38 220

27 28 220

40 41 221

37 38 221

5 6 221

37 38 222

5 6 222

42 43 222

5 6 223

42 43 223

5 6 224

42 43 224

37 38 225

42 43 225

37 38 226

30 34 226

42 43 226

42 43 227

37 38 228

42 43 228

37 38 230

38 41 230

30 34 230

42 43 230

12 13 231

42 43 231

12 13 232

38 43 232

42 43 232

37 42 233

38 42 233

42 43 233

37 38 234

40 41 234

42 43 234

30 37 235

37 38 235

38 42 235

42 43 235

37 38 236

42 43 236

12 13 237

37 38 237

42 43 237

30 37 238

37 38 238

12 13 238

42 43 238

13 37 239

37 39 239

12 37 239

37 38 239

12 13 239

12 39 239

12 38 239

38 39 239

13 38 239

42 43 239

13 39 239

37 39 240

37 38 240

12 37 240

13 37 240

12 13 240

12 39 240

12 38 240

13 38 240

38 39 240

42 43 240

13 39 240

42 43 241

44 45 242

42 43 242

44 45 243

42 43 243

44 45 244

42 43 244

44 45 245

42 43 245

42 43 246

44 45 247

42 43 247

44 45 248

42 43 248

44 45 249

42 43 249

42 43 250

44 45 251

42 43 251

30 34 252

44 45 253

44 45 254

42 43 254

30 34 255

40 41 256

42 43 256

44 45 257

42 43 257

44 45 258

42 43 258

30 34 259

44 45 259

42 43 259

40 41 260

30 34 260

42 43 260

40 41 261

30 34 261

42 43 263

41 43 263

41 46 264

40 41 264

42 43 264

44 45 265

44 45 266

44 45 267

30 34 267

42 43 267

42 43 268

47 48 269

30 42 269

30 43 269

47 48 270

42 43 270

30 34 271

42 43 271

30 34 272

42 43 272

30 34 273

42 43 273

44 45 277

30 34 280

30 34 281

30 34 282

46 48 282

47 48 284

49 50 286

47 48 286

49 50 287

47 48 287

49 50 288

47 48 288

44 45 288

49 50 289

44 45 289

49 50 290

44 45 290

49 50 291

44 45 291

49 50 292

47 48 292

44 45 292

47 48 293

44 45 293

49 50 294

49 50 295

47 48 295

51 52 295

44 45 295

51 52 296

44 45 296

41 49 297

49 50 297

44 45 297

47 48 298

44 45 298

51 52 299

44 45 299

47 48 300

44 45 300

26 41 301

47 48 301

44 45 301

40 41 301

47 48 302

44 45 302

40 41 302

49 50 303

44 45 303

26 44 304

49 50 304

47 48 304

44 45 304

49 50 305

26 51 305

44 45 305

49 50 306

44 45 306

49 50 307

44 45 307

40 41 307

49 50 308

44 45 308

49 50 309

44 45 309

47 48 310

44 45 310

49 50 311

30 34 311

44 45 311

49 50 312

51 52 312

44 45 312

49 50 313

44 45 313

44 45 314

44 45 315

44 45 316

47 48 317

30 34 317

44 45 317

47 48 318

44 45 318

30 34 319

44 45 319

44 45 320

40 41 320

51 52 321

44 45 321

44 45 322

44 45 323

44 45 324

44 45 325

44 45 326

44 45 327

44 45 328

40 41 328

26 51 329

44 45 329

51 52 330

47 48 330

44 45 330

40 41 330

51 52 331

44 45 333

40 41 333

44 45 334

44 45 335

44 45 336

53 54 336

53 55 337

54 55 337

44 45 337

40 41 337

53 55 338

47 48 338

44 45 338

53 54 338

53 55 339

54 55 339

53 54 339

53 55 340

54 55 340

44 45 341

40 41 341

53 55 342

47 48 342

44 45 342

40 41 342

53 55 343

47 48 343

44 45 343

44 45 344

53 54 344

53 55 345

44 45 345

53 54 345

53 55 346

44 45 346

53 54 346

40 41 346

53 55 347

40 41 347

53 55 348

53 54 348

53 55 349

54 55 349

44 45 349

53 54 349

53 55 350

47 48 350

44 45 350

53 54 350

53 55 351

47 48 351

44 45 351

53 54 351

40 41 351

53 55 352

53 54 352

53 55 353

44 45 353

53 54 353

40 41 353

53 55 354

54 55 354

44 45 354

53 54 354

40 41 354

53 55 355

54 55 355

44 45 355

53 54 355

40 41 355

53 55 356

40 41 356

40 41 357

53 55 358

54 55 358

47 48 358

44 45 358

40 41 358

53 55 359

44 45 359

53 54 359

40 41 359

53 55 360

44 45 360

53 54 360

48 56 360

53 55 361

47 48 361

44 45 361

53 54 361

40 41 361

53 55 362

47 48 362

44 45 362

53 54 362

47 48 363

44 45 363

53 54 363

44 45 364

40 41 364

44 45 365

53 54 365

40 41 365

53 55 366

44 45 366

53 54 366

53 55 367

44 45 367

53 54 367

40 41 367

53 55 368

44 45 368

53 54 368

40 41 368

53 55 369

54 55 369

53 54 369

53 55 370

54 55 370

44 45 370

53 54 370

40 41 370

53 55 371

44 45 371

53 54 371

40 41 371

44 45 372

53 54 372

40 41 372

53 55 373

44 45 373

53 54 373

53 55 374

47 48 374

44 45 374

53 54 374

40 41 374

53 55 375

47 48 375

44 45 375

53 54 375

53 55 376

54 55 376

41 57 376

44 45 376

53 54 376

40 41 376

53 55 377

44 45 377

53 54 377

40 41 377

53 55 378

54 55 378

53 57 378

44 45 378

53 54 378

53 55 379

44 45 379

53 54 379

53 55 380

44 45 380

53 54 380

53 55 381

44 45 381

53 54 381

53 55 382

54 55 382

44 45 382

53 54 382

58 59 383

58 60 383

53 55 383

44 45 383

53 54 383

59 60 383

58 61 384

58 59 384

58 60 384

53 55 384

54 55 384

44 45 384

53 54 384

59 61 384

60 61 384

59 60 384

53 55 385

53 54 385

59 61 385

58 60 386

58 59 386

58 62 386

53 55 386

59 62 386

53 54 386

44 45 386

60 61 386

63 64 387

63 65 387

58 60 387

53 55 387

44 55 387

53 54 387

44 45 387

59 61 387

47 53 388

58 60 388

59 61 388

44 45 388

53 55 388

48 53 388

53 54 388

54 55 388

58 65 388

45 47 389

59 61 389

59 63 389

61 66 389

63 66 389

53 54 389

53 55 389

63 65 389

63 67 389

54 55 389

58 68 389

58 65 389

58 67 389

65 67 389

65 68 389

45 47 390

47 48 390

59 61 390

59 67 390

69 70 390

62 64 390

53 54 390

63 68 390

63 65 390

63 67 390

54 55 390

58 68 390

58 65 390

58 71 390

65 67 390

65 68 390

60 66 391

62 64 391

53 55 391

44 45 391

69 70 391

70 71 391

59 64 391

59 61 391

61 64 391

69 72 391

69 71 391

54 55 391

58 65 391

71 72 391

73 74 392

73 75 392

60 66 392

64 66 392

69 70 392

61 64 392

62 64 392

44 45 392

58 70 392

53 55 392

74 75 392

54 55 392

74 75 393

60 72 393

60 68 393

60 62 393

60 66 393

59 61 393

62 66 393

62 72 393

69 70 393

70 71 393

53 54 393

63 68 393

63 65 393

63 67 393

58 65 393

58 71 393

67 68 393

65 68 393

73 76 394

60 62 394

60 66 394

66 72 394

62 66 394

75 77 394

62 64 394

62 72 394

53 54 394

53 55 394

59 61 394

74 78 394

74 75 394

63 65 394

63 67 394

58 71 394

68 71 394

65 67 394

68 72 394

75 78 394

47 48 395

73 76 395

70 73 395

59 61 395

74 77 395

45 77 395

77 78 395

62 64 395

62 67 395

70 76 395

69 70 395

53 55 395

53 54 395

58 63 395

74 78 395

69 75 395

58 65 395

72 76 395

65 71 395

65 67 395

45 78 395

47 48 396

60 75 396

45 60 396

74 77 396

62 67 396

53 55 396

53 54 396

59 61 396

63 65 396

74 78 396

54 55 396

47 48 397

66 79 397

60 75 397

66 69 397

66 71 397

66 67 397

74 77 397

77 78 397

62 67 397

53 55 397

53 54 397

59 61 397

74 78 397

47 48 398

47 62 398

74 75 398

75 78 398

75 77 398

63 75 398

66 71 398

66 67 398

74 77 398

77 78 398

62 67 398

53 54 398

53 55 398

59 61 398

63 65 398

65 74 398

74 78 398

68 69 398

54 55 398

65 78 398

68 70 399

59 61 399

66 67 399

66 71 399

62 64 399

40 78 399

67 71 399

47 48 400

47 67 400

62 79 400

60 71 400

65 66 400

63 66 400

66 67 400

77 78 400

62 64 400

62 71 400

53 54 400

53 55 400

70 72 400

69 70 400

68 70 400

59 61 400

63 67 400

63 65 400

74 75 400

68 69 400

67 80 400

54 55 400

68 72 400

72 75 400

72 78 400

68 75 400

47 48 401

47 63 401

60 71 401

65 66 401

63 66 401

66 67 401

72 77 401

77 78 401

53 54 401

53 55 401

68 70 401

59 61 401

63 65 401

63 67 401

74 78 401

73 80 401

65 67 401

72 78 401

47 48 402

72 75 402

65 66 402

63 66 402

74 77 402

77 78 402

59 61 402

70 71 402

53 55 402

53 54 402

63 65 402

74 78 402

73 80 402

30 34 403

75 80 403

74 77 403

77 78 403

63 77 403

70 71 403

74 78 403

71 73 403

47 48 404

60 63 404

59 72 404

59 66 404

59 71 404

66 72 404

66 71 404

77 78 404

62 64 404

62 78 404

58 61 404

61 75 404

63 68 404

74 78 404

73 76 405

60 65 405

60 63 405

74 77 405

77 78 405

75 77 405

68 70 405

53 54 405

58 63 405

63 65 405

72 74 405

68 76 405

58 71 405

71 72 405

71 75 405

47 48 406

66 79 406

73 76 406

66 71 406

74 77 406

72 77 406

77 78 406

70 76 406

70 75 406

53 55 406

72 74 406

75 76 406

58 71 406

47 48 407

59 79 407

66 79 407

68 75 407

75 77 407

59 64 407

59 63 407

59 66 407

66 67 407

63 66 407

68 69 407

72 77 407

77 78 407

53 55 407

53 54 407

68 70 407

70 73 407

61 65 407

63 72 407

63 67 407

73 76 407

58 71 407

67 72 407

72 78 407

47 48 408

65 73 408

72 77 408

63 77 408

69 70 408

59 67 408

59 63 408

53 54 408

53 55 408

63 67 408

68 69 408

58 71 408

58 75 408

68 75 408

64 79 409

75 78 409

75 77 409

59 66 409

62 66 409

68 77 409

62 65 409

62 67 409

63 68 409

68 74 409

67 74 409

71 76 409

54 55 409

58 71 409

65 67 409

71 79 410

65 75 410

59 66 410

62 69 410

77 78 410

62 65 410

53 54 410

53 55 410

68 70 410

61 71 410

63 65 410

63 67 410

71 76 410

73 76 410

65 67 410

73 76 411

58 73 411

58 66 411

59 66 411

74 77 411

77 78 411

53 55 411

68 70 411

59 61 411

63 65 411

63 67 411

58 76 411

65 67 411

72 75 411

66 79 412

70 73 412

59 61 412

59 66 412

58 69 412

69 70 412

68 69 412

77 78 412

62 65 412

62 67 412

53 81 412

58 70 412

63 65 412

63 67 412

54 81 412

72 75 412

71 79 413

58 73 413

73 76 413

59 61 413

59 67 413

65 66 413

69 70 413

62 69 413

77 78 413

61 67 413

61 65 413

61 63 413

68 70 413

53 54 413

53 55 413

63 65 413

68 79 414

65 79 414

62 79 414

73 76 414

77 78 414

53 54 414

53 55 414

63 66 414

74 78 414

71 76 414

58 68 414

67 68 414

72 75 414

65 79 415

58 59 415

59 66 415

82 83 415

61 62 415

69 70 415

70 76 415

53 54 415

53 55 415

71 76 415

54 55 415

77 78 415

72 75 415

65 79 416

82 83 416

61 66 416

59 66 416

77 78 416

62 63 416

59 70 416

61 70 416

68 70 416

64 76 416

68 69 416

72 75 416

58 60 417

82 83 417

74 77 417

59 62 417

58 59 417

61 64 417

61 65 417

74 78 417

66 67 417

74 75 418

75 77 418

75 78 418

82 83 418

72 77 418

58 62 418

62 71 418

62 68 418

59 61 418

61 65 418

66 68 418

65 76 418

58 65 418

65 71 418

72 78 418

82 83 419

59 61 419

61 81 419

63 67 419

74 78 419

66 68 419

65 76 419

58 65 419

68 71 419

67 68 419

73 76 420

82 83 420

63 66 420

69 70 420

77 78 420

75 77 420

68 70 420

61 68 420

74 78 420

71 76 420

68 71 420

72 75 420

75 78 420

74 75 421

72 75 421

75 77 421

60 67 421

59 61 421

59 66 421

59 67 421

82 83 421

72 77 421

77 78 421

62 63 421

61 66 421

63 65 421

72 78 421

76 79 422

74 75 422

58 60 422

82 83 422

61 66 422

59 66 422

77 78 422

62 67 422

69 70 422

59 61 422

72 74 422

58 71 422

69 79 423

70 79 423

58 60 423

60 71 423

82 83 423

59 66 423

74 77 423

77 78 423

69 70 423

70 73 423

68 70 423

59 61 423

61 68 423

69 73 423

67 72 423

70 79 424

66 79 424

73 76 424

70 73 424

59 61 424

82 83 424

69 70 424

74 77 424

72 77 424

77 78 424

75 77 424

62 63 424

66 70 424

61 76 424

63 67 424

72 74 424

74 75 424

74 78 424

64 65 424

58 68 424

58 71 424

72 75 424

30 34 425

72 75 425

75 81 425

58 60 425

82 83 425

66 70 425

59 66 425

77 81 425

62 63 425

69 70 425

61 70 425

68 70 425

59 61 425

63 67 425

72 74 425

65 74 425

74 78 425

58 68 425

65 72 425

30 34 426

59 66 426

82 83 426

66 68 426

69 70 426

72 77 426

62 63 426

63 67 426

72 74 426

67 81 426

72 78 426

72 75 426

58 79 427

73 76 427

82 83 427

58 66 427

69 76 427

77 78 427

68 70 427

61 68 427

63 67 427

58 79 428

71 79 428

66 79 428

73 76 428

60 71 428

82 83 428

59 66 428

77 78 428

58 70 428

58 59 428

68 83 428

58 71 428

68 75 428

30 34 429

61 79 429

65 79 429

70 79 429

73 76 429

58 60 429

59 64 429

59 63 429

59 62 429

59 66 429

58 82 429

71 82 429

82 83 429

71 83 429

77 78 429

62 66 429

65 70 429

61 65 429

64 81 429

64 66 429

58 71 429

30 34 430

61 79 430

71 79 430

60 75 430

59 67 430

59 63 430

59 66 430

82 83 430

63 66 430

72 77 430

77 78 430

62 64 430

65 70 430

70 73 430

61 65 430

63 67 430

72 74 430

64 67 430

58 76 430

58 71 430

30 34 431

61 79 431

65 79 431

60 81 431

59 63 431

59 62 431

59 66 431

82 83 431

62 64 431

62 63 431

68 70 431

70 71 431

70 75 431

61 65 431

58 76 431

72 78 431

68 75 431

68 81 431

30 34 432

61 79 432

60 79 432

59 66 432

82 83 432

58 70 432

70 75 432

68 70 432

61 75 432

58 68 432

66 67 432

30 34 433

65 79 433

62 79 433

69 73 433

58 60 433

59 61 433

59 66 433

82 83 433

61 66 433

72 77 433

77 78 433

62 65 433

68 70 433

63 67 433

68 71 433

71 75 433

68 75 433

30 34 434

78 79 434

58 60 434

84 85 434

59 72 434

66 72 434

61 66 434

66 78 434

63 67 434

64 67 434

72 78 434

85 86 435

61 79 435

71 79 435

59 79 435

69 73 435

73 87 435

84 85 435

59 61 435

59 71 435

82 83 435

77 78 435

65 70 435

61 66 435

61 71 435

63 67 435

58 74 435

64 67 435

68 75 435

85 86 436

62 79 436

82 83 436

77 78 436

77 83 436

65 70 436

71 87 436

63 81 436

63 67 436

68 74 436

74 75 436

64 67 436

68 76 436

67 81 436

68 75 436

57 72 437

85 86 437

71 79 437

62 79 437

69 73 437

82 83 437

77 78 437

70 76 437

70 75 437

61 65 437

63 67 437

64 67 437

72 78 437

68 75 437

85 86 438

59 66 438

82 83 438

61 66 438

77 78 438

84 85 438

70 76 438

70 75 438

68 70 438

63 67 438

74 78 438

68 76 438

75 76 438

68 75 438

85 86 439

84 86 439

60 79 439

79 80 439

75 76 439

65 75 439

68 75 439

60 71 439

59 61 439

59 66 439

82 83 439

74 77 439

72 77 439

77 78 439

67 77 439

70 76 439

61 66 439

63 74 439

63 67 439

74 78 439

72 81 439

72 78 439

85 86 440

84 86 440

68 87 440

65 87 440

70 87 440

66 87 440

82 83 440

74 77 440

77 78 440

70 76 440

61 66 440

74 78 440

65 76 440

68 75 440

82 83 441

61 66 441

70 76 441

70 75 441

68 70 441

63 67 441

68 76 441

77 78 441

72 78 441

68 75 441

63 87 442

59 80 442

82 83 442

88 89 442

70 76 442

68 70 442

70 75 442

66 70 442

61 80 442

68 76 442

72 77 442

77 78 442

72 78 442

68 75 442

84 86 443

84 85 443

82 83 443

88 89 443

63 67 443

72 74 443

89 90 443

72 78 443

84 86 444

82 83 444

88 90 444

88 89 444

63 67 444

72 74 444

89 91 444

72 77 444

77 78 444

89 90 444

72 78 444

82 83 445

88 89 445

88 91 445

89 92 445

91 92 445

63 67 445

90 91 445

89 91 445

72 77 445

89 90 445

72 78 445

85 86 446

84 86 446

82 83 446

88 90 446

88 89 446

88 91 446

84 85 446

91 92 446

63 64 446

63 67 446

63 80 446

74 78 446

64 67 446

64 80 446

67 80 446

90 91 446

89 91 446

72 77 446

77 78 446

89 90 446

85 86 447

63 64 447

63 67 447

63 80 447

64 67 447

64 80 447

67 80 447

72 77 447

77 78 447

85 86 448

82 83 448

88 93 448

92 93 448

63 64 448

63 80 448

63 67 448

64 67 448

64 80 448

67 80 448

72 77 449

77 78 449

63 64 449

63 80 449

63 67 449

64 67 449

64 80 449

67 80 449

88 94 450

88 95 450

63 64 450

63 80 450

63 67 450

64 67 450

64 80 450

67 80 450

90 95 450

89 91 450

89 96 450

57 85 451

85 86 451

97 98 451

72 77 451

77 78 451

63 64 451

63 67 451

63 80 451

72 74 451

64 67 451

64 80 451

90 93 451

67 80 451

88 99 451

72 78 451

57 85 452

97 98 452

88 92 452

90 92 452

63 64 452

63 67 452

63 80 452

98 100 452

64 80 452

64 67 452

67 80 452

72 78 452

57 100 453

97 98 453

82 83 453

63 64 453

63 67 453

63 80 453

98 100 453

64 67 453

95 99 453

89 95 453

67 80 453

57 97 454

98 101 454

97 101 454

94 100 454

92 96 454

74 78 454

90 91 454

57 101 455

57 91 455

97 98 455

97 100 455

89 97 455

93 94 455

66 70 455

89 92 455

98 100 455

64 67 455

64 80 455

93 95 455

89 93 455

91 93 455

67 80 455

89 98 455

66 67 455

72 77 455

57 102 456

98 101 456

101 103 456

63 66 456

66 67 456

90 94 456

92 94 456

88 92 456

88 89 456

88 100 456

90 92 456

92 100 456

63 64 456

63 80 456

63 67 456

64 67 456

64 80 456

67 80 456

89 98 456

72 77 456

93 101 457

85 86 457

84 86 457

97 99 457

90 94 457

88 95 457

88 93 457

88 100 457

64 80 457

63 64 457

64 67 457

93 95 457

89 98 457

63 67 457

63 80 457

67 80 457

72 78 457

90 101 458

97 101 458

85 86 458

96 97 458

82 83 458

90 94 458

88 93 458

77 88 458

91 92 458

63 64 458

63 67 458

63 80 458

74 77 458

74 78 458

64 67 458

64 80 458

93 98 458

93 95 458

67 80 458

95 96 458

72 77 458

90 101 459

94 101 459

89 101 459

85 86 459

95 96 459

90 94 459

91 92 459

63 64 459

63 80 459

63 67 459

74 78 459

64 67 459

64 80 459

77 80 459

67 80 459

99 102 459

72 102 459

90 101 460

85 86 460

82 83 460

74 77 460

72 77 460

77 78 460

104 105 460

63 64 460

63 80 460

63 67 460

72 74 460

74 78 460

64 67 460

64 80 460

89 90 460

67 80 460

67 78 460

72 78 460

85 86 461

95 96 461

82 83 461

104 105 461

90 98 461

98 100 461

92 93 461

74 77 461

64 67 461

63 64 461

64 80 461

63 67 461

63 80 461

77 78 461

67 80 461

90 99 461

85 86 462

82 83 462

98 100 462

63 64 462

63 80 462

63 67 462

64 67 462

64 80 462

67 80 462

90 103 462

100 101 463

85 86 463

97 99 463

82 83 463

83 93 463

92 94 463

88 94 463

88 102 463

88 89 463

88 100 463

91 98 463

92 93 463

92 103 463

92 96 463

64 67 463

63 64 463

64 80 463

93 95 463

93 96 463

95 96 463

63 67 463

63 80 463

67 80 463

100 101 464

85 86 464

86 100 464

97 99 464

82 83 464

104 105 464

91 98 464

63 64 464

63 67 464

63 80 464

64 80 464

64 67 464

67 80 464

85 86 465

64 80 465

67 80 465

82 83 465

67 83 465

100 102 465

64 67 465

85 86 466

86 88 466

91 97 466

88 93 466

88 91 466

63 64 466

63 67 466

63 80 466

64 67 466

93 99 466

93 95 466

95 96 466

91 95 466

67 80 466

89 101 467

100 101 467

85 86 467

95 97 467

90 94 467

92 98 467

91 92 467

89 100 467

93 95 467

93 96 467

67 80 467

95 96 467

100 101 468

85 86 468

91 97 468

91 94 468

88 94 468

94 96 468

88 100 468

92 98 468

91 98 468

93 95 468

93 96 468

95 96 468

90 95 468

85 86 469

90 97 469

93 94 469

88 94 469

88 100 469

91 100 469

93 96 469

90 91 469

88 101 470

100 101 470

85 86 470

90 97 470

92 97 470

88 94 470

94 103 470

88 100 470

91 92 470

93 95 470

93 96 470

95 96 470

91 106 470

100 101 471

85 86 471

92 97 471

88 94 471

88 100 471

88 91 471

92 98 471

91 98 471

93 95 471

93 96 471

95 96 471

91 106 471

88 101 472

100 101 472

85 86 472

90 97 472

88 94 472

88 99 472

88 100 472

92 98 472

89 98 472

89 92 472

89 100 472

93 95 472

89 91 472

85 86 473

97 98 473

92 97 473

94 103 473

92 98 473

84 86 474

97 98 474

90 97 474

91 94 474

91 98 474

91 103 474

91 100 474

94 101 475

89 101 475

85 86 475

84 86 475

90 97 475

97 98 475

92 97 475

88 97 475

89 94 475

88 92 475

88 89 475

88 91 475

84 85 475

92 98 475

91 92 475

93 99 475

93 96 475

100 101 476

85 86 476

97 98 476

94 103 476

91 94 476

89 100 476

93 99 476

89 93 476

93 96 476

89 96 476

94 101 477

101 103 477

91 101 477

85 86 477

97 98 477

91 97 477

94 98 477

90 94 477

88 94 477

88 90 477

88 89 477

88 100 477

92 100 477

92 93 477

91 92 477

91 100 477

96 100 477

89 93 477

93 96 477

89 99 477

84 86 478

90 97 478

97 98 478

91 97 478

88 89 478

90 98 478

93 99 478

95 101 479

84 86 479

94 100 479

88 89 479

85 100 479

92 95 479

92 93 479

92 96 479

93 96 479

95 99 479

88 101 480

85 86 480

95 97 480

88 89 480

88 100 480

84 104 480

95 98 480

92 98 480

92 93 480

92 96 480

91 92 480

93 96 480

91 95 480

88 101 481

97 98 481

95 97 481

91 97 481

88 89 481

88 100 481

92 95 481

92 93 481

90 100 481

89 100 481

88 101 482

92 97 482

88 90 482

88 89 482

88 100 482

84 85 482

92 93 482

90 100 482

89 100 482

93 95 482

91 95 482

88 101 483

101 103 483

85 86 483

93 97 483

92 97 483

91 97 483

88 89 483

88 100 483

93 98 483

92 98 483

92 93 483

91 92 483

90 100 483

91 93 483

95 96 483

93 101 484

88 101 484

85 86 484

84 86 484

93 97 484

92 97 484

88 89 484

104 105 484

93 98 484

92 98 484

92 93 484

90 100 484

95 96 484

90 99 484

90 101 485

93 101 485

100 101 485

85 86 485

89 94 485

92 98 485

91 98 485

92 93 485

90 100 485

89 100 485

91 93 485

95 96 485

90 101 486

85 86 486

87 106 486

93 97 486

90 94 486

93 98 486

91 93 486

95 96 486

87 101 487

87 97 487

87 88 487

94 98 487

89 94 487

88 107 487

84 85 487

89 107 487

98 100 487

93 95 487

93 96 487

95 96 487

85 86 488

87 90 488

87 100 488

87 91 488

97 98 488

90 94 488

88 94 488

88 90 488

88 98 488

88 100 488

91 92 488

93 95 488

89 91 488

90 101 489

91 101 489

89 97 489

91 97 489

93 107 489

90 100 489

95 96 489

90 101 490

100 101 490

89 94 490

88 98 490

88 92 490

92 98 490

93 95 490

98 101 491

89 97 491

89 94 491

88 94 491

88 92 491

92 98 491

89 98 491

98 100 491

89 92 491

93 95 491

93 96 491

100 101 492

97 98 492

88 97 492

93 95 492

93 96 492

95 96 492

85 86 493

88 97 493

88 92 493

88 100 493

92 100 493

90 100 493

95 96 493

95 101 494

93 101 494

97 101 494

90 97 494

90 98 494

92 100 494

89 92 494

89 100 494

93 95 494

95 96 494

88 97 495

89 94 495

94 100 495

88 89 495

88 100 495

89 100 495

88 97 496

88 92 496

88 100 496

93 95 496

88 101 497

97 100 497

88 94 497

94 100 497

88 100 497

89 92 497

92 100 497

93 95 497

93 96 497

95 96 497

93 101 498

88 101 498

94 98 498

92 94 498

89 94 498

88 92 498

88 100 498

89 98 498

91 98 498

92 100 498

89 92 498

93 95 498

93 96 498

95 96 498

90 101 499

93 101 499

85 86 499

93 95 499

95 96 499

90 101 500

85 86 500

91 97 500

94 98 500

104 105 500

93 95 500

85 86 501

84 86 501

93 95 501

95 96 502

90 95 502

97 98 503

95 97 503

96 97 503

90 94 503

95 100 503

93 100 503

95 96 503

88 101 504

85 86 504

97 98 504

95 97 504

96 97 504

90 94 504

95 100 504

95 96 504

88 89 505

89 91 505

94 98 506

94 95 506

93 94 506

95 98 506

96 98 506

90 100 506

93 95 506

93 96 506

94 98 507

89 94 507

95 98 507

93 98 507

89 98 507

91 92 507

100 103 507

93 95 507

89 93 507

89 95 507

93 101 508

100 101 508

95 98 508

93 98 508

89 98 508

91 92 508

95 96 508

89 95 508

100 101 509

94 95 509

88 103 509

88 89 509

95 98 509

89 98 509

98 100 509

93 95 509

89 95 509

100 101 510

94 95 510

89 94 510

88 98 510

88 103 510

98 100 510

89 98 510

91 92 510

93 95 510

89 93 510

93 96 510

95 96 510

89 95 510

100 101 511

85 86 511

84 86 511

89 94 511

88 98 511

88 103 511

84 85 511

98 100 511

91 98 511

91 92 511

95 103 511

90 93 511

93 95 511

89 93 511

93 96 511

90 96 511

95 96 511

89 96 511

89 95 511

100 101 512

97 100 512

92 97 512

97 103 512

88 97 512

88 103 512

104 105 512

93 95 512

89 93 512

95 96 512

89 95 512

100 101 513

85 86 513

84 86 513

92 97 513

89 97 513

88 92 513

88 103 513

104 105 513

90 93 513

93 95 513

89 93 513

93 96 513

95 96 513

89 96 513

90 95 513

89 95 513

100 101 514

85 86 514

104 105 514

95 98 514

89 98 514

90 93 514

91 93 514

95 96 514

89 96 514

89 95 514

98 101 515

97 101 515

85 86 515

97 98 515

91 97 515

88 98 515

88 95 515

88 89 515

88 91 515

84 85 515

91 98 515

90 92 515

93 96 515

95 96 515

89 91 515

97 101 516

97 98 516

91 97 516

88 95 516

88 89 516

91 98 516

90 92 516

92 93 516

89 92 516

93 96 516

95 96 516

89 95 516

101 103 517

85 86 517

86 88 517

84 86 517

94 97 517

90 91 517

85 86 518

97 98 518

97 100 518

88 94 518

88 98 518

84 85 518

92 95 518

93 96 518

84 86 519

84 89 519

95 103 519

93 95 519

93 96 519

95 96 519

89 90 519

85 86 520

84 86 520

97 98 520

92 97 520

89 97 520

94 100 520

88 90 520

89 98 520

89 92 520

93 95 520

93 96 520

95 96 520

89 91 520

88 101 521

84 86 521

92 97 521

88 94 521

84 85 521

91 98 521

89 92 521

93 95 521

92 101 522

85 86 522

93 97 522

88 92 522

88 100 522

104 105 522

93 98 522

92 100 522

95 96 522

91 96 522

88 89 523

104 105 523

92 93 523

89 92 523

92 96 523

93 96 523

95 96 523

89 95 523

85 86 524

84 86 524

97 98 524

91 97 524

84 85 524

91 98 524

91 101 525

84 86 525

91 97 525

94 100 525

91 98 525

85 86 526

84 86 526

84 86 527

88 97 527

94 100 527

94 100 528

91 98 528

97 100 529

88 89 529

84 86 530

97 98 530

94 97 530

90 94 530

88 96 530

91 98 530

98 100 530

91 100 530

90 91 530

97 100 531

88 96 531

91 98 531

98 100 531

95 100 531

91 100 531

90 93 531

93 95 531

89 93 531

91 93 531

90 95 531

91 95 531

97 98 532

95 97 532

90 94 532

91 98 532

95 100 532

91 95 532

94 100 533

88 92 533

88 96 533

93 95 533

91 93 533

91 95 533

91 98 533

89 98 533

84 86 534

90 94 534

94 100 534

88 98 534

88 92 534

88 91 534

91 92 534

89 92 534

93 103 534

93 95 534

91 96 534

89 98 534

95 98 535

88 95 535

90 94 535

89 98 535

88 89 535

89 91 535

88 91 535

88 98 535

84 86 535

92 93 535

108 109 536

84 86 536

90 94 536

104 105 536

92 98 536

92 93 536

89 93 536

95 98 536

89 95 536

89 98 536

108 109 537

100 101 537

84 86 537

90 94 537

88 95 537

89 92 537

89 95 537

108 109 538

100 101 538

85 86 538

92 97 538

90 94 538

88 94 538

89 98 538

100 101 539

85 86 539

97 98 539

90 94 539

88 89 539

108 109 540

94 101 540

100 101 540

85 86 540

97 98 540

89 94 540

88 90 540

88 89 540

88 100 540

91 92 540

93 98 540

93 95 540

91 93 540

93 96 540

108 109 541

94 101 541

100 101 541

85 86 541

84 86 541

95 97 541

96 97 541

94 100 541

88 100 541

84 85 541

90 93 541

93 96 541

95 96 541

108 109 542

94 101 542

89 101 542

100 101 542

85 86 542

95 97 542

89 94 542

94 100 542

88 93 542

92 95 542

92 103 542

89 100 542

108 109 543

89 101 543

85 86 543

86 98 543

86 94 543

86 88 543

95 97 543

92 97 543

89 94 543

94 100 543

88 98 543

84 89 543

84 100 543

92 95 543

92 103 543

91 92 543

89 100 543

90 93 543

93 98 543

91 95 543

108 109 544

89 101 544

85 86 544

84 86 544

95 97 544

92 97 544

96 97 544

88 90 544

88 89 544

88 100 544

91 92 544

92 96 544

90 100 544

89 100 544

93 98 544

95 96 544

90 98 544

89 90 544

108 110 545

108 109 545

88 101 545

85 86 545

84 86 545

109 110 545

97 98 545

93 97 545

90 94 545

88 90 545

88 100 545

84 85 545

92 95 545

93 98 545

108 109 546

89 101 546

100 101 546

85 86 546

84 86 546

109 110 546

89 97 546

97 100 546

90 94 546

88 89 546

84 85 546

92 95 546

89 100 546

95 96 546

91 98 546

108 109 547

97 101 547

89 101 547

109 110 547

89 97 547

97 100 547

88 90 547

88 89 547

88 100 547

92 95 547

92 96 547

90 100 547

89 100 547

95 96 547

91 98 547

108 109 548

90 101 548

97 101 548

89 101 548

97 100 548

89 97 548

92 93 548

92 96 548

91 92 548

90 100 548

89 100 548

91 98 548

111 112 548

112 113 548

108 109 549

93 98 549

93 95 549

91 98 549

111 112 549

108 109 550

112 113 550

93 98 550

91 98 550

111 112 550

108 109 551

90 101 551

88 101 551

100 101 551

88 97 551

96 97 551

112 113 551

88 90 551

88 100 551

89 92 551

91 92 551

90 100 551

93 98 551

91 98 551

111 112 551

90 94 551

108 109 552

109 113 552

109 112 552

95 97 552

92 97 552

90 94 552

88 94 552

94 100 552

88 89 552

88 100 552

89 92 552

91 92 552

91 93 552

93 96 552

91 98 552

108 109 553

97 101 553

92 101 553

94 109 553

92 97 553

112 113 553

88 90 553

88 89 553

92 93 553

93 95 553

93 96 553

95 96 553

91 95 553

111 112 553

89 90 553

108 109 554

108 111 554

108 113 554

92 101 554

91 101 554

92 97 554

91 97 554

111 113 554

112 113 554

88 90 554

88 94 554

88 89 554

88 100 554

91 92 554

90 100 554

94 100 554

89 100 554

95 96 554

90 94 554

89 94 554

89 90 554

101 109 555

97 98 555

88 90 555

88 94 555

88 89 555

89 100 555

93 98 555

90 94 555

89 94 555

89 90 555

95 101 556

101 109 556

91 101 556

95 109 556

92 109 556

97 98 556

112 113 556

92 93 556

93 98 556

111 112 556

89 90 556

108 109 557

96 108 557

92 108 557

91 108 557

95 96 557

91 98 557

91 109 557

91 92 557

92 98 557

92 109 557

93 95 558

95 96 558

91 113 558

91 98 558

91 92 558

92 98 558

108 109 558

97 112 558

108 109 559

91 98 559

91 92 559

92 98 559

97 101 559

108 109 560

109 113 560

91 92 560

97 101 560

111 112 560

109 112 560

108 109 561

97 101 561

108 109 562

97 101 562

104 105 562

108 109 563

97 101 563

111 112 563

104 105 563

108 109 564

97 101 564

108 109 565

108 109 566

111 113 566

97 101 566

108 109 567

111 113 567

97 101 567

104 105 567

108 109 568

97 101 568

101 103 568

104 105 568

97 103 568

108 109 569

111 113 569

104 105 569

108 109 570

111 112 570

104 105 570

108 109 571

108 109 574

111 112 575

111 112 577

108 109 578

111 112 578

108 109 579

108 109 580

108 109 581

111 113 581

112 113 581

111 112 581

108 109 582

109 113 582

112 113 582

109 111 582

111 112 582

108 109 583

112 113 584

108 109 585

108 109 586

111 113 586

112 113 586

111 112 586

108 109 587

111 113 587

112 113 587

111 112 587

108 109 588

108 109 589

108 109 592

108 109 593

114 115 600

114 115 602

114 115 603

114 115 604

114 115 605

114 115 607

114 115 608

114 115 611

114 115 613

114 115 615

114 115 617

114 115 619

114 115 620

114 115 623

114 115 625

114 115 631

114 115 632

114 115 633

116 117 633

116 117 634

114 115 635

116 117 636

104 105 636

118 119 637

118 119 638

118 119 639

116 117 641

114 115 643

118 119 645

114 115 646

118 119 646

114 115 647

104 105 647

114 115 648

104 105 648

104 105 649

118 119 649

104 105 650

118 119 650

120 121 651

104 105 651

118 119 651

120 121 652

116 117 652

104 105 652

118 119 652

120 121 653

104 105 653

120 121 654

116 117 654

104 105 654

120 121 655

114 115 655

104 105 655

120 121 656

114 115 656

121 122 656

104 105 656

118 119 656

120 121 657

116 117 657

104 105 657

120 121 658

116 117 658

104 105 658

120 121 659

116 117 659

104 105 659

120 121 660

104 105 660

120 121 661

114 115 661

120 121 663

114 115 663

110 117 664

114 115 664

118 119 664

110 117 665

120 121 665

120 121 666

110 119 667

120 121 667

110 121 668

120 121 668

116 117 668

120 121 669

123 124 669

116 117 669

104 105 669

118 119 669

120 121 670

123 125 670

123 124 670

124 125 670

116 117 670

104 105 670

124 125 671

123 125 671

123 124 671

120 121 671

116 117 671

104 105 671

123 124 672

116 117 672

104 105 672

118 119 672

110 121 673

124 125 673

114 115 673

120 121 673

104 105 673

118 119 673

123 125 674

123 124 674

120 121 674

116 117 674

104 105 674

123 124 675

120 121 675

104 105 675

123 124 676

114 115 676

104 105 676

124 125 677

123 124 677

120 121 677

104 105 677

124 125 678

123 125 678

123 124 678

120 121 678

104 105 678

124 125 679

123 125 679

120 121 679

123 124 679

104 105 679

123 124 680

120 121 680

123 125 680

104 105 680

123 125 681

123 124 681

124 125 681

115 126 681

124 125 682

123 124 682

114 115 682

116 117 682

104 105 682

116 117 683

114 115 683

117 121 683

123 124 683

104 105 683

123 124 684

104 105 684

124 125 685

123 124 685

123 125 685

116 117 685

104 105 685

120 121 686

116 117 686

123 124 686

104 105 686

123 124 687

120 121 687

116 117 687

120 121 688

123 124 688

120 121 689

123 124 689

124 125 690

123 124 690

123 125 690

120 121 690

116 117 690

124 125 691

123 125 691

123 124 691

120 121 691

117 121 691

116 117 691

120 121 692

123 125 692

123 124 692

124 125 692

117 121 692

116 117 692

124 125 693

115 124 693

123 124 693

116 117 693

120 121 693

124 125 694

115 124 694

123 124 694

115 123 694

120 121 694

121 125 695

124 125 695

120 125 695

123 124 695

116 117 695

120 121 695

120 121 696

115 120 696

123 124 696

115 121 696

123 125 696

104 105 696

124 125 697

123 125 697

120 121 697

115 121 697

116 117 697

124 125 698

123 125 698

117 124 698

123 124 698

116 124 698

116 117 698

116 123 698

120 121 698

124 125 699

123 125 699

120 121 699

123 125 700

123 124 700

123 125 701

127 128 701

124 125 702

123 124 702

127 129 702

127 128 702

128 129 702

116 117 702

123 124 703

116 117 703

104 105 703

124 125 704

123 125 704

115 116 704

116 117 704

123 124 704

104 105 704

128 130 704

123 125 705

116 117 705

116 127 705

117 128 705

123 124 706

127 129 706

127 128 706

116 117 706

124 125 707

123 125 707

123 124 707

115 127 707

127 130 707

127 128 707

115 130 707

116 117 707

128 130 707

127 130 708

127 129 708

127 128 708

123 124 708

115 130 708

129 130 708

128 130 708

127 130 709

127 128 709

123 124 709

129 130 709

128 129 709

128 130 709

124 125 710

123 125 710

123 124 710

127 130 710

127 128 710

123 124 711

127 130 711

127 129 711

127 128 711

123 126 711

128 130 711

123 124 712

127 130 712

127 128 712

128 130 712

127 130 713

127 128 713

123 125 714

127 130 714

127 128 714

123 124 714

128 130 714

124 125 715

123 125 715

127 130 715

128 129 715

124 125 716

123 124 716

127 130 716

127 128 716

128 130 716

124 125 717

123 125 717

123 124 717

127 130 717

127 129 717

129 130 717

128 130 717

124 125 718

123 125 718

127 130 718

123 124 718

128 130 718

124 125 719

123 125 719

123 124 719

127 130 719

127 128 719

128 130 719

124 125 720

123 124 720

127 130 720

127 129 720

123 125 720

128 130 720

115 125 721

127 130 721

127 128 721

131 132 722

124 125 723

127 130 723

131 132 723

128 130 723

124 125 724

123 124 724

123 125 724

123 132 724

131 132 724

128 130 724

124 125 725

123 125 725

123 124 725

124 132 725

127 128 725

131 132 725

128 130 725

123 124 726

123 125 726

127 128 726

131 132 726

128 130 726

123 125 727

131 132 727

128 130 727

123 125 728

127 130 728

127 128 728

128 130 728

124 125 729

123 125 729

127 130 729

131 132 729

128 130 729

123 124 730

133 134 730

127 130 730

123 125 730

131 132 730

128 130 730

124 125 731

123 125 731

123 124 731

127 130 731

131 132 731

128 130 731

124 125 732

123 125 732

127 130 732

131 132 732

128 130 732

124 125 733

123 125 733

123 124 733

133 134 733

127 130 733

127 128 733

131 132 733

128 130 733

123 125 734

123 124 734

127 130 734

131 132 734

128 130 734

124 125 735

123 125 735

123 124 735

127 130 735

127 128 735

131 132 735

128 130 735

124 125 736

127 130 736

131 132 736

128 130 736

124 125 737

123 125 737

123 124 737

127 130 737

123 131 737

131 132 737

128 130 737

124 125 738

123 125 738

123 124 738

123 133 738

127 130 738

127 128 738

131 132 738

128 130 738

124 125 739

123 125 739

123 124 739

131 132 739

128 130 739

124 125 740

123 125 740

123 124 740

127 130 740

127 128 740

129 130 740

131 132 740

128 130 740

127 130 741

127 128 741

131 132 741

128 130 741

127 130 742

127 128 742

131 132 742

128 130 742

127 130 743

127 128 743

131 135 743

131 132 743

128 130 743

127 130 744

127 128 744

128 130 744

127 130 745

131 132 746

127 130 747

127 129 747

127 128 747

131 132 747

127 130 748

127 128 748

136 137 748

131 132 748

132 135 749

136 137 749

131 132 749

133 134 750

136 137 750

131 132 750

128 130 750

129 130 751

136 137 751

131 132 751

128 130 751

127 130 752

127 128 752

129 130 752

128 129 752

136 137 752

131 132 752

127 130 753

128 130 753

127 128 754

136 137 754

131 132 754

128 130 754

133 138 755

136 137 755

127 130 755

127 128 755

131 132 755

128 130 755

133 138 756

127 130 756

131 137 756

131 132 756

128 130 756

132 137 756

133 138 757

127 130 757

127 128 757

128 130 757

136 137 758

127 130 758

127 129 758

127 128 758

129 130 758

128 129 758

131 132 758

128 130 758

127 130 759

127 129 759

127 128 759

129 130 759

128 129 759

136 137 759

128 130 759

129 138 760

127 130 760

129 130 760

136 137 760

128 130 760

129 138 761

127 130 761

136 137 761

131 132 761

128 130 761

127 130 762

127 128 762

130 135 762

131 132 762

128 130 762

127 128 763

131 132 763

127 130 764

127 128 764

131 132 764

128 130 764

139 140 765

133 134 765

127 130 765

127 128 765

127 130 766

131 132 766

128 130 766

127 130 767

127 128 767

131 132 767

115 132 768

128 130 768

115 138 769

127 130 769

131 132 769

115 138 770

133 134 770

127 130 770

131 132 770

127 130 771

136 137 771

131 132 771

115 138 772

127 130 772

136 137 772

131 132 772

128 130 772

127 130 773

136 137 773

133 134 774

127 130 774

136 137 774

131 132 774

128 130 774

127 130 775

128 130 775

127 130 776

127 132 776

136 137 776

131 132 776

139 140 777

131 132 777

127 130 778

141 142 778

131 132 778

128 130 778

127 130 779

141 142 779

131 132 779

128 130 779

127 130 780

141 142 780

131 132 780

139 140 781

127 130 781

141 142 781

128 130 781

127 130 782

141 142 782

136 137 782

128 130 782

139 140 783

133 142 783

136 137 783

127 130 783

141 142 783

131 132 783

127 130 784

141 142 784

128 130 784

127 130 785

127 128 785

141 142 785

136 137 785

128 130 785

138 143 786

127 130 786

127 128 786

141 142 786

136 137 786

128 130 786

138 143 787

127 130 787

127 128 787

136 137 787

128 130 787

138 142 788

138 143 788

127 130 788

141 142 788

136 137 788

128 130 788

138 143 789

127 130 789

141 142 789

136 137 789

138 143 790

127 130 790

136 137 790

128 130 790

138 143 791

127 130 791

127 128 791

136 137 791

128 130 791

138 143 792

127 130 792

142 143 792

136 137 792

128 130 792

138 142 793

138 143 793

139 140 793

127 130 793

127 128 793

136 137 793

128 130 793

138 143 794

127 130 794

141 142 794

128 130 794

138 143 795

127 130 795

127 128 795

141 142 795

138 143 796

127 130 796

127 128 796

128 130 796

138 143 797

127 130 797

141 142 797

136 137 797

128 130 797

138 143 798

139 140 798

133 135 798

127 130 798

128 130 798

138 143 799

127 130 799

127 128 799

128 130 799

138 143 800

127 130 800

127 128 800

128 130 800

138 143 801

135 138 801

127 130 801

127 128 801

136 137 801

128 130 801

138 143 802

127 130 802

127 128 802

128 130 802

138 143 803

127 130 803

127 128 803

141 142 803

128 130 803

138 143 804

138 143 805

139 140 805

127 128 805

141 142 805

138 143 806

127 128 806

138 143 809

136 137 809

138 143 810

134 138 810

138 143 811

138 143 812

136 137 812

138 143 813

133 143 813

127 130 813

127 128 813

136 137 813

144 145 813

144 145 814

138 143 814

128 130 814

141 142 814

127 128 815

141 142 815

128 130 815

127 130 816

127 128 816

136 137 816

128 130 816

141 142 816

145 146 817

127 130 817

127 128 817

136 137 817

128 130 817

133 134 818

141 142 818

145 146 818

128 130 818

144 145 819

145 146 819

144 145 820

144 146 820

136 137 820

141 142 820

144 146 821

139 140 822

141 142 822

139 140 823

141 142 823

133 134 824

141 142 824

133 134 825

141 142 825

133 134 826

141 142 826

133 134 827

141 142 827

138 143 827

139 140 829

141 142 829

141 142 830

138 143 831

141 142 831

141 142 832

138 143 833

138 143 834

139 140 835

141 142 835

138 143 835

141 142 836

141 142 837

141 142 838

141 142 840

147 148 844

147 148 845

147 148 846

149 150 846

149 151 846

150 151 846

149 150 847

149 151 847

144 145 848

152 153 848

149 150 848

144 145 849

147 150 849

138 143 849

149 150 849

148 150 849

150 151 849

138 143 850

152 153 850

149 150 850

150 151 850

145 146 851

152 153 851

147 148 851

138 143 851

149 150 851

150 151 851

144 145 852

145 146 852

152 153 852

147 148 852

138 143 852

141 142 852

149 151 852

150 151 852

138 143 853

152 153 853

144 150 853

152 153 854

147 148 854

141 142 854

149 150 854

138 143 855

152 153 855

147 148 855

141 142 855

149 150 855

150 151 855

152 153 856

147 148 856

138 143 856

141 142 856

149 151 856

138 143 857

152 153 857

141 142 857

149 150 857

147 148 857

152 153 858

147 148 858

149 150 858

150 151 858

138 143 859

152 153 859

147 148 859

141 142 859

149 150 859

150 151 859

152 153 860

154 155 860

141 142 860

142 147 860

141 147 860

147 148 860

152 153 861

141 142 861

149 151 861

152 153 862

154 155 862

144 146 862

147 149 862

138 143 863

152 153 863

154 155 863

145 146 864

146 155 864

138 143 865

152 153 865

144 146 865

144 145 865

144 145 866

145 146 866

145 154 866

152 153 866

144 154 866

154 155 866

138 143 866

144 146 867

144 145 867

154 155 867

152 153 867

138 143 867

138 143 868

154 155 868

144 145 868

138 143 869

152 153 869

154 155 869

149 151 869

138 143 870

152 153 870

154 155 870

138 143 871

152 153 871

149 150 871

150 151 872

147 148 873

149 150 873

152 153 874

154 155 874

149 150 874

149 151 874

150 151 874

138 143 875

154 155 875

147 148 875

149 150 875

150 151 875

138 143 876

152 153 876

149 150 876

138 143 877

152 153 877

154 155 877

147 155 877

147 148 877

138 143 878

152 153 878

147 148 878

154 155 878

149 150 878

156 157 878

138 143 879

152 153 879

152 153 880

156 157 880

154 155 880

147 148 880

149 150 880

147 148 881

156 157 881

138 143 881

154 155 881

138 143 882

152 153 882

156 157 882

154 155 882

152 155 882

149 150 882

152 153 883

156 157 883

147 148 883

145 154 884

152 153 884

156 157 884

147 148 884

138 143 884

149 151 884

154 155 885

144 145 886

141 142 886

138 143 886

152 153 886

154 155 886

145 146 887

144 146 887

144 145 887

152 153 887

141 142 887

145 146 888

144 146 888

154 155 888

152 153 888

141 142 888

152 153 889

152 154 889

149 150 889

156 157 889

152 153 890

154 155 890

156 157 890

149 150 890

150 151 890

152 153 891

154 155 891

150 154 891

156 157 891

147 148 891

149 150 891

150 151 891

144 146 892

156 157 892

152 153 892

154 155 892

144 146 893

152 153 893

156 157 893

154 155 893

138 143 893

145 146 894

144 146 894

138 143 894

152 153 894

147 148 894

154 155 894

156 157 894

138 143 895

152 153 895

156 157 895

145 146 895

138 143 896

156 157 896

143 151 896

141 142 896

144 146 897

156 157 897

138 143 897

141 142 897

145 146 898

144 146 898

144 145 898

156 157 898

147 148 898

138 143 898

141 142 898

156 157 899

138 143 899

141 142 899

147 148 899

152 153 900

141 142 900

156 157 900

156 157 901

141 142 901

152 153 901

134 158 902

141 157 902

142 157 902

156 157 902

141 142 902

150 151 902

152 153 903

134 158 903

141 159 903

142 159 903

156 157 903

147 148 903

141 142 903

150 151 903

148 151 903

152 153 904

141 159 904

150 159 904

147 148 904

156 157 904

141 148 904

156 157 905

152 153 905

145 146 906

149 150 906

156 157 906

138 143 906

144 145 907

136 137 907

147 148 907

141 148 907

148 151 907

148 149 907

141 149 907

141 150 907

141 151 907

147 151 907

149 150 907

156 157 907

138 143 907

152 153 907

149 151 907

156 157 908

147 151 908

152 153 908

149 151 908

138 143 909

156 157 909

138 143 910

152 153 911

138 143 911

158 160 911

152 153 912

156 157 912

144 145 912

158 160 912

152 153 913

152 153 914

156 157 914

156 157 915

145 146 916

158 160 916

158 159 917

156 157 917

144 146 918

158 159 918

146 157 919

156 157 919

145 146 920

146 156 920

144 145 920

156 157 920

158 160 920

144 146 924

158 160 925

156 157 930

156 157 933

158 160 933

156 157 934

156 157 935

156 157 936

156 157 937

156 157 938

156 157 939

144 145 947

144 145 948

144 146 948

156 157 951

156 157 952

156 158 956

156 157 959

161 162 965

161 162 966

161 162 967

161 162 968

144 145 968

147 163 968

144 145 969

161 162 969

147 163 969

146 158 970

161 162 970

144 145 970

161 162 971

144 145 971

164 165 971

161 162 972

165 166 972

161 162 973

165 166 973

161 162 974

164 165 974

164 166 974

165 166 974

161 162 975

164 165 975

145 146 976

161 162 976

164 165 976

164 166 976

161 162 977

164 165 977

164 166 977

144 145 978

164 166 978

165 166 978

161 162 978

161 162 979

164 166 979

161 162 980

164 165 980

164 166 980

165 166 980

161 162 981

164 165 981

164 166 981

165 166 981

161 162 982

164 165 982

164 166 982

165 166 982

136 137 983

161 162 983

164 165 983

164 166 983

165 166 983

136 137 984

161 162 984

164 165 984

164 166 984

165 166 984

136 137 985

161 162 985

164 165 985

164 166 985

165 166 985

161 162 986

165 166 986

161 162 987

165 166 987

161 162 988

164 165 988

164 166 988

165 166 988

161 162 989

165 166 989

161 162 990

165 166 990

161 162 991

161 162 992

161 162 993

146 166 994

161 162 994

136 137 994

165 166 994

161 162 995

165 166 995

144 146 996

161 162 996

165 166 996

144 146 997

145 146 997

165 166 997

147 167 997

161 162 997

145 146 998

161 162 998

145 146 999

158 163 999

164 165 999

164 166 999

165 166 999

145 146 1000

164 165 1000

145 146 1001

164 165 1001

164 166 1001

165 166 1001

145 146 1002

144 145 1002

161 162 1002

164 166 1002

165 166 1002

146 167 1002

144 146 1002

164 165 1002

144 145 1003

145 146 1003

162 168 1003

161 168 1003

144 146 1003

161 162 1003

164 166 1003

165 166 1003

144 145 1004

145 146 1004

162 168 1004

161 168 1004

144 146 1004

164 165 1004

164 166 1004

165 166 1004

136 137 1005

161 162 1005

164 165 1005

164 166 1005

165 166 1005

136 137 1006

161 162 1006

164 165 1006

164 166 1006

165 166 1006

136 137 1007

161 162 1007

164 165 1007

164 166 1007

165 166 1007

136 137 1008

161 162 1008

164 165 1008

164 166 1008

165 166 1008

161 162 1009

136 137 1009

164 165 1009

164 166 1009

165 166 1009

161 162 1010

136 137 1010

164 165 1010

164 166 1010

165 166 1010

161 162 1011

136 137 1011

164 165 1011

164 166 1011

165 166 1011

158 160 1012

161 162 1012

136 137 1012

164 165 1012

164 166 1012

165 166 1012

161 162 1013

136 137 1013

164 166 1013

161 162 1014

136 137 1014

164 165 1014

164 166 1014

136 137 1015

136 165 1015

161 162 1015

164 165 1015

164 166 1015

137 164 1015

137 165 1015

137 166 1015

165 166 1015

161 162 1016

136 137 1016

164 166 1016

165 166 1016

166 168 1017

136 137 1017

161 162 1017

164 166 1017

161 162 1018

136 137 1018

164 165 1018

164 166 1018

165 166 1018

136 137 1019

161 162 1019

164 166 1019

165 166 1019

163 168 1020

136 137 1020

161 162 1020

165 166 1020

136 137 1021

164 165 1021

164 166 1021

165 166 1021

164 165 1022

164 166 1022

165 166 1022

164 165 1023

164 166 1023

165 166 1023

158 160 1024

164 165 1024

164 166 1024

165 166 1024

136 137 1025

158 160 1025

164 165 1025

164 166 1025

165 166 1025

136 137 1026

164 165 1026

164 166 1026

165 166 1026

158 160 1027

164 166 1027

136 137 1028

164 166 1028

165 166 1028

164 166 1029

164 168 1030

166 168 1030

136 137 1031

158 166 1031

158 164 1032

158 166 1032

136 137 1032

164 166 1032

169 170 1033

158 164 1033

158 160 1033

171 172 1033

164 166 1033

171 172 1034

136 137 1034

169 170 1034

158 163 1034

169 170 1035

171 172 1035

136 137 1035

164 165 1035

164 166 1035

165 166 1035

171 172 1036

170 171 1036

164 166 1036

169 170 1036

169 170 1037

164 166 1037

158 170 1037

169 170 1038

164 166 1038

171 172 1038

158 160 1038

137 173 1039

173 174 1039

164 166 1039

137 174 1039

171 172 1040

137 173 1040

164 166 1040

165 166 1040

137 174 1040

158 160 1040

171 172 1041

137 173 1041

158 173 1041

137 163 1041

137 158 1041

165 166 1041

173 174 1042

137 174 1042

171 172 1043

137 173 1043

173 174 1043

137 174 1043

137 173 1044

173 174 1044

137 170 1045

137 173 1045

137 173 1046

175 176 1046

163 175 1046

163 176 1046

137 173 1047

173 174 1047

163 176 1047

158 160 1047

175 176 1047

137 173 1048

173 174 1048

166 172 1048

137 174 1048

163 176 1048

171 172 1049

166 171 1049

137 173 1049

173 174 1049

163 176 1049

163 175 1049

137 174 1049

175 176 1049

166 172 1049

169 170 1050

168 170 1050

137 173 1050

137 174 1050

163 176 1050

175 176 1050

168 170 1051

165 166 1051

137 173 1052

165 166 1052

163 176 1052

163 176 1053

163 175 1053

137 174 1053

166 168 1053

165 166 1053

137 169 1054

165 173 1054

173 174 1054

163 176 1054

163 175 1054

164 165 1054

137 166 1054

165 166 1054

164 173 1055

173 174 1055

163 175 1055

164 165 1055

165 166 1055

137 173 1056

163 176 1056

163 175 1056

137 165 1056

171 172 1057

163 176 1057

164 166 1057

165 166 1057

171 172 1058

137 173 1058

173 174 1058

163 176 1058

137 174 1058

164 165 1058

164 166 1058

165 166 1058

137 173 1059

173 174 1059

163 171 1059

137 174 1059

137 164 1059

164 166 1059

164 165 1059

137 173 1060

173 174 1060

137 174 1060

164 165 1060

164 166 1060

165 166 1060

173 174 1061

164 166 1061

165 166 1061

163 176 1061

164 165 1061

137 173 1062

173 174 1062

163 176 1062

164 165 1062

164 166 1062

165 166 1062

137 173 1063

173 174 1063

164 166 1063

165 166 1063

137 174 1063

163 176 1063

164 165 1063

137 173 1064

173 174 1064

137 174 1064

163 176 1064

164 165 1064

137 173 1065

163 173 1067

173 175 1067

163 176 1067

175 176 1067

163 175 1067

137 163 1067

137 173 1068

173 174 1068

137 174 1068

163 176 1068

175 176 1068

163 175 1068

163 176 1069

163 175 1069

163 176 1070

175 176 1070

163 175 1070

177 178 1071

163 176 1071

177 178 1072

163 176 1072

177 178 1073

163 176 1073

177 178 1074

163 176 1074

177 178 1075

163 176 1075

177 178 1076

177 178 1077

163 176 1077

177 178 1078

163 176 1078

177 178 1079

163 176 1079

177 178 1080

163 176 1080

177 178 1081

177 178 1082

177 178 1083

177 178 1084

163 176 1084

177 178 1085

163 176 1085

177 178 1086

163 176 1086

177 178 1087

177 178 1088

163 176 1088

177 178 1089

163 176 1089

177 178 1090

163 176 1090

175 179 1091

177 178 1091

180 181 1091

163 176 1091

177 178 1092

163 176 1092

179 182 1093

163 176 1093

177 178 1094

179 182 1095

177 178 1095

180 181 1095

179 182 1096

163 179 1096

177 178 1096

180 181 1096

179 182 1097

177 178 1097

163 176 1097

180 181 1097

163 175 1097

179 182 1098

177 178 1098

180 181 1098

163 175 1098

177 178 1099

180 181 1100

179 182 1101

179 182 1102

179 182 1103

175 183 1103

183 184 1104

179 182 1104

183 184 1105

177 178 1105

180 182 1105

179 182 1106

177 178 1106

183 184 1107

179 182 1107

177 178 1107

177 180 1107

179 182 1108

183 184 1109

183 184 1110

179 182 1110

177 178 1110

179 182 1111

177 178 1111

183 184 1112

177 178 1112

183 184 1113

179 182 1113

177 178 1113

183 184 1114

177 178 1114

183 184 1115

177 178 1115

179 182 1116

177 178 1116

179 182 1117

177 178 1117

182 184 1118

177 178 1118

177 178 1119

183 184 1119

183 184 1120

177 178 1120

185 186 1120

177 178 1121

183 184 1121

177 178 1122

179 182 1122

177 178 1123

185 186 1123

182 186 1123

177 178 1124

183 184 1124

179 182 1125

177 178 1125

183 184 1126

177 178 1126

179 182 1126

183 184 1127

177 178 1127

183 184 1128

177 178 1128

177 178 1129

177 178 1130

186 187 1130

185 186 1131

177 178 1131

185 186 1132

177 178 1132

177 178 1133

188 189 1133

183 184 1134

177 178 1134

188 189 1134

177 178 1135

188 189 1135

183 184 1136

177 178 1136

183 184 1137

177 178 1137

180 183 1137

183 184 1138

177 178 1138

188 189 1138

177 178 1139

188 189 1139

177 178 1140

188 189 1140

183 184 1141

177 178 1141

188 189 1141

185 186 1142

183 184 1142

177 178 1142

188 189 1142

183 184 1143

167 185 1143

177 178 1143

188 189 1143

183 184 1144

177 178 1144

188 189 1144

177 178 1145

188 189 1145

177 178 1146

188 189 1146

183 184 1147

177 178 1147

188 189 1147

183 184 1148

177 178 1148

188 189 1148

177 178 1149

188 189 1149

177 178 1150

180 181 1150

188 189 1150

183 184 1151

167 188 1151

188 189 1151

188 189 1152

185 186 1153

183 184 1153

183 184 1155

188 189 1155

185 186 1156

188 189 1156

183 184 1157

188 189 1157

188 189 1158

188 189 1159

183 184 1160

188 189 1160

185 186 1161

188 189 1161

185 186 1162

185 186 1163

185 186 1164

185 186 1171

188 189 1172

185 186 1173

188 189 1173

185 186 1174

188 189 1174

185 186 1175

188 189 1175

185 186 1191

185 186 1192

185 186 1193

190 191 1198

190 191 1201

185 186 1201

190 191 1202

185 186 1202

190 191 1203

185 186 1203

185 190 1204

185 186 1204

190 191 1204

185 186 1205

190 191 1205

185 186 1206

190 191 1206

192 193 1206

192 193 1207

190 191 1208

192 193 1208

190 191 1209

192 193 1209

192 193 1210

192 193 1211

192 193 1212

192 193 1213

190 191 1214

192 193 1214

190 191 1215

192 193 1215

190 191 1216

190 191 1217

192 193 1217

192 193 1218

192 193 1219

192 193 1220

192 193 1221

190 191 1222

190 191 1223

192 193 1223

190 191 1224

190 191 1225

192 193 1225

190 191 1226

192 193 1226

192 193 1227

192 194 1228

188 189 1228

192 193 1228

192 194 1229

192 193 1229

189 190 1230

188 189 1230

192 193 1232

192 193 1233

192 193 1234

190 191 1235

192 193 1235

190 191 1236

192 194 1236

190 191 1237

188 189 1237

192 194 1238

188 189 1238

190 191 1239

192 194 1239

188 189 1239

192 193 1239

190 191 1240

192 194 1240

192 193 1240

190 191 1241

192 194 1241

192 193 1241

190 191 1242

192 194 1242

192 193 1242

192 194 1243

192 193 1243

190 191 1244

192 194 1244

192 193 1244

192 194 1245

192 193 1245

192 194 1246

193 194 1246

192 193 1246

192 194 1247

192 193 1247

192 194 1248

192 193 1248

190 191 1249

192 194 1249

193 194 1249

192 193 1249

190 191 1250

192 194 1250

193 194 1250

192 193 1250

192 194 1251

193 194 1251

192 193 1251

192 194 1252

193 194 1252

192 193 1252

192 194 1253

193 194 1253

192 193 1253

195 196 1254

196 197 1254

192 193 1254

195 196 1255

195 197 1255

196 197 1255

192 193 1255

195 196 1256

196 197 1256

192 193 1256

192 193 1258

192 193 1259

196 197 1266

195 196 1270

196 197 1270

195 196 1271

196 197 1271

195 196 1272

195 197 1272

196 197 1272

195 196 1273

196 197 1273

194 195 1274

195 196 1276

195 197 1276

195 196 1277

195 197 1277

190 191 1278

195 196 1278

195 197 1278

195 196 1279

195 197 1279

194 196 1279

195 196 1280

195 197 1280

196 197 1280

194 196 1280

195 196 1281

195 197 1281

194 196 1281

190 191 1282

195 196 1282

195 197 1282

194 196 1282

195 196 1283

195 197 1283

194 196 1283

195 196 1284

195 197 1284

194 196 1284

194 196 1285

190 191 1286

195 196 1286

196 197 1286

194 196 1286

190 191 1287

195 196 1287

195 197 1287

195 196 1288

195 197 1288

196 197 1288

195 196 1289

195 197 1289

196 197 1289

194 196 1289

195 196 1290

195 197 1290

190 191 1291

195 196 1291

195 197 1291

190 191 1292

195 196 1292

195 197 1292

195 196 1293

195 197 1293

190 191 1294

195 196 1294

195 197 1294

195 196 1295

195 197 1295

196 197 1295

195 196 1296

195 197 1296

190 191 1297

195 196 1297

195 197 1297

195 196 1298

195 197 1298

196 197 1298

190 191 1299

195 196 1299

196 197 1299

194 196 1299

190 191 1300

196 197 1300

198 199 1300

195 196 1301

195 196 1302

196 197 1302

195 196 1303

196 197 1303

194 196 1303

198 199 1303

195 196 1304

196 197 1304

198 199 1305

195 196 1307

196 197 1307

198 199 1307

198 199 1308

195 197 1309

196 197 1310

198 199 1312

190 191 1313

198 199 1313

198 199 1314

195 197 1315

198 199 1315

196 197 1316

195 196 1317

195 197 1317

196 197 1317

195 196 1318

195 196 1319

198 199 1319

195 196 1320

195 197 1320

196 197 1320

195 196 1321

195 197 1321

196 197 1321

198 199 1321

195 196 1322

196 197 1322

198 199 1322

195 196 1323

195 197 1323

196 197 1323

195 196 1324

195 197 1324

196 197 1324

195 196 1325

195 197 1325

196 197 1325

195 196 1326

198 199 1326

195 196 1327

198 199 1328

195 196 1329

196 197 1329

198 199 1329

195 196 1330

198 199 1330

195 196 1331

195 196 1334

195 196 1335

195 196 1336

195 196 1337

195 197 1337

195 196 1338

196 197 1338

198 199 1338

195 196 1339

198 199 1339

195 196 1340

195 196 1341

195 197 1341

198 199 1341

195 196 1342

195 197 1342

198 199 1342

195 197 1343

198 199 1343

198 199 1344

195 197 1345

195 196 1347

195 197 1347

198 199 1347

195 196 1348

195 197 1348

196 197 1348

198 199 1348

195 196 1349

195 197 1349

196 197 1349

198 199 1349

195 196 1350

195 197 1350

196 197 1350

195 196 1351

196 197 1351

197 199 1351

198 199 1354

195 197 1355

195 197 1356

195 197 1358

195 197 1359

195 197 1369

198 199 1370

198 199 1373

198 199 1374

198 199 1375

198 199 1376

195 197 1403

195 197 1404
FILENAME : misc.c 
 =========== 
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// code for temporal network SIR by Petter Holme (2018/2020)



// miscellaneous routines for tsir



#include "tsir.h"



extern GLOBALS g;

extern NODE *n;



// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// giving exponential random numbers with a mean reciprocal of the recovery rate



unsigned int exptime () {

	uint32_t r = pcg_32();



	if (r == 4294967295u) return 0;



	return g.a * log((r + 1) / 4294967296.0);

}



// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// this routine reads the temporal network from the standard input

// the format is strict and unflexible (and meant to be assembled by a wrapper)

// function



void read_data () {

	unsigned int i, j, me;



	if (2 != scanf("%u %u", &g.n, &g.dur)) { // the number of nodes N and duration of the data set

		fprintf(stderr, "reading error 1\n");

		exit(1);

	}



	n = calloc(g.n, sizeof(NODE));



	for (me = 0; me < g.n; me++) { // then for every node

		if (1 != scanf("%u", &n[me].deg)) { // .. scan the degree

			fprintf(stderr, "reading error 2\n");

			exit(1);

		}

		n[me].nb = malloc(n[me].deg * sizeof(unsigned int));

		n[me].nc = malloc(n[me].deg * sizeof(unsigned int));

		n[me].t = malloc(n[me].deg * sizeof(unsigned int *));

		for (i = 0; i < n[me].deg; i++) { // for all neighbors of me

			if (2 != scanf("%u %u", n[me].nb + i, n[me].nc + i)) { // scan the id & number of contacts with that neighbor

				fprintf(stderr, "reading error 3\n");

				exit(1);

			}

			n[me].t[i] = malloc(n[me].nc[i] * sizeof(unsigned int));

			for (j = 0; j < n[me].nc[i]; j++)

				if (1 != scanf("%u", n[me].t[i] + j)) { // the time of contacts to that neighbor, these need to be sorted in decreasing value of its final element

					fprintf(stderr, "reading error 4\n");

					exit(1);

				}

		}

	}

}



// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
